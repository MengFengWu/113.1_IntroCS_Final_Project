class LevelDrawer {
    field int time;

    method int getTime() { return time; }

    /*
        function explanation:
            drawLevel: draw tiles first time.
            eraseLevel: clear all tiles.
            updateLevel: update moving tiles.
    */

    constructor LevelDrawer new() {
        let time = 0;
        return this;
    }

    method void updateTime() {
        let time = time + 1;
        if(time > 10000) {
            let time = time - 10000;
        }
        return;
    }

    method void drawLevelMain(int level) {
        if(level = 1) {
            do drawLevel1();
        }
        if(level = 2) {
            do drawLevel2();
        }
        if(level = 3) {
            do drawLevel3();
        }
        if(level = 4) {
            do drawLevel4();
        }
        if(level = 5) {
            do drawLevel5();
        }
        return;
    }

    method void eraseLevelMain(int level) {
        if(level = 1) {
            do eraseLevel1();
        }
        if(level = 2) {
            do eraseLevel2();
        }
        if(level = 3) {
            do eraseLevel3();
        }
        if(level = 4) {
            do eraseLevel4();
        }
        if(level = 5) {
            do eraseLevel5();
        }
        return;
    }

    method void updateLevelMain(int level) {
        if(level = 2) {
            do updateLevel2();
        }
        return;
    }

    method void drawLevel1() {
        do Screen.setColor(true);
        do drawRectangle(0, 450, 127, 137); // mid floor
        do drawRectangle(0, 25, 122, 152); // AmongUs
        do drawRectangle(470, 510, 194, 254); // right step up
        do drawRectangle(50, 90, 214, 254); // first step
        do drawRectangle(50, 80, 158, 182); // AmongUsEye
        do drawRectangle(125, 145, 174, 254); // second step
        do drawRectangle(110, 145, 127, 146); // second step head
        do drawRectangle(200, 280, 234, 254); // third step
        do drawRectangle(200, 250, 160, 162); // place item 1
        do drawRectangle(300, 330, 170, 230); // fourth step
        do drawRectangle(380, 420, 170, 254); // fifth step
        // to upperhalf
        do drawRectangle(380, 430, 112, 127); // up1
        do drawRectangle(460, 510, 55, 75); // up2
        do drawRectangle(368, 370, 30, 85); // wall b/w 13
        do drawRectangle(300, 360, 30, 55); // up3
        do drawRectangle(200, 240, 30, 50); // up4
        do drawRectangle(120, 122, 30, 127); // wall b/w 45
        // end stairs
        do drawRectangle(0, 25, 20, 130); // stair 1
        do drawRectangle(0, 55, 52, 130); // stair 2
        do drawRectangle(0, 85, 87, 130); // stair 3
        return;
    }

    method void eraseLevel1() {
        /** Remember to erase after finish design*/
        do Screen.setColor(false);
        do drawRectangle(0, 450, 127, 137); // mid floor
        do drawRectangle(0, 25, 122, 152); // AmongUs
        do drawRectangle(470, 510, 194, 254); // right step up
        do drawRectangle(50, 90, 214, 254); // first step
        do drawRectangle(50, 80, 158, 182); // AmongUsEye
        do drawRectangle(125, 145, 174, 254); // second step
        do drawRectangle(110, 145, 127, 146); // second step head
        do drawRectangle(200, 280, 234, 254); // third step
        do drawRectangle(200, 250, 160, 162); // place item 1
        do drawRectangle(300, 330, 170, 230); // fourth step
        do drawRectangle(380, 420, 170, 254); // fifth step
        // to upperhalf
        do drawRectangle(380, 430, 112, 127); // up1
        do drawRectangle(460, 510, 55, 75); // up2
        do drawRectangle(368, 370, 30, 85); // wall b/w 13
        do drawRectangle(300, 360, 30, 55); // up3
        do drawRectangle(200, 240, 30, 50); // up4
        do drawRectangle(120, 122, 30, 127); // wall b/w 45
        // end stairs
        do drawRectangle(0, 25, 20, 130); // stair 1
        do drawRectangle(0, 55, 52, 130); // stair 2
        do drawRectangle(0, 85, 87, 130); // stair 3
        return;
    }

    method void drawLevel2() {
        do Screen.setColor(true);
        do drawRectangle(50, 90, 234, 254); // lvl2 1
        //do drawRectangle(470, 510, 190, 200); // lvl2 2
        do drawRectangle(410, 450, 85, 95); // lvl2 4
        do drawRectangle(10, 50, 130, 140); // place item 2
        do drawRectangle(10, 50, 20, 30); // lvl2 5

        do updateLevel2();
        return;
    }

    method void eraseLevel2() {
        /** Remember to erase after finish design*/
        do Screen.setColor(false);
        do drawRectangle(50, 90, 234, 254); // lvl2 1
        //do drawRectangle(470, 510, 190, 200); // lvl2 2
        do drawRectangle(410, 450, 85, 95); // lvl2 4
        do drawRectangle(10, 50, 130, 140); // place item 2
        do drawRectangle(10, 50, 20, 30); // lvl2 5
        do updateMovingSquare(100, 170, 200, 220, 220, 290, 200, 220, 300, true, false); // moving plate 1
        do updateMovingSquare(400, 470, 200, 220, 310, 380, 200, 220, 300, true, false); // moving plate 2
        do updateMovingSquare(180, 185, 130, 180, 180, 185, 204, 254, 86, true, false); // moving obstacle 1
        do updateMovingSquare(420, 460, 170, 180, 460, 500, 80, 180, 173, true, false); // lvl2 3
        do updateMovingSquare(320, 360, 110, 130, 320, 360, 30, 130, 160, true, false); // expand stand 1
        do updateMovingSquare(230, 270, 30, 130, 230, 270, 110, 130, 160, true, false); // expand stand 2
        do updateMovingSquare(105, 125, 110, 130, 60, 170, 50, 130, 270, true, false); // expand stand 3
        return;
    }

    method void updateLevel2() {
        do updateMovingSquare(100, 170, 200, 220, 220, 290, 200, 220, 300, true, false); // moving plate 1
        do updateMovingSquare(400, 470, 200, 220, 310, 380, 200, 220, 300, true, false); // moving plate 2
        do updateMovingSquare(180, 185, 130, 180, 180, 185, 204, 254, 86, true, false); // moving obstacle 1
        do updateMovingSquare(420, 460, 170, 180, 460, 500, 80, 180, 173, true, false); // lvl2 3
        do updateMovingSquare(320, 360, 110, 130, 320, 360, 30, 130, 160, true, false); // expand stand 1
        do updateMovingSquare(230, 270, 30, 130, 230, 270, 110, 130, 160, true, false); // expand stand 2
        do updateMovingSquare(105, 125, 110, 130, 60, 170, 50, 130, 270, true, false); // expand stand 3

        do updateTime();
        do updateMovingSquare(100, 170, 200, 220, 220, 290, 200, 220, 300, true, true); // moving plate 1
        do updateMovingSquare(400, 470, 200, 220, 310, 380, 200, 220, 300, true, true); // moving plate 2
        do updateMovingSquare(180, 185, 130, 180, 180, 185, 204, 254, 86, true, true); // moving obstacle 1
        do updateMovingSquare(420, 460, 170, 180, 460, 500, 80, 180, 173, true, true); // lvl2 3
        do updateMovingSquare(320, 360, 110, 130, 320, 360, 30, 130, 160, true, true); // expand stand 1
        do updateMovingSquare(230, 270, 30, 130, 230, 270, 110, 130, 160, true, true); // expand stand 2
        do updateMovingSquare(105, 125, 110, 130, 60, 170, 50, 130, 270, true, true); // expand stand 3

        return;
    }

    method void drawLevel3() {
        do Screen.setColor(true);
        // do drawRectangle(0, 100, 100, 250);
        // do drawTriangle(100, 100, 400, 250, true);
        // do drawTriangle(450, 250, 500, 200, true);
        return;
    }

    method void eraseLevel3() {
        do Screen.setColor(false);
        // do drawRectangle(0, 100, 100, 250);
        // do drawTriangle(100, 100, 400, 250, true);
        // do drawTriangle(450, 250, 500, 200, true);
        return;
    }

    method void drawLevel4() {
        do Screen.setColor(true);
        do drawRectangle(0, 510, 0, 254); // dark mode

        do drawRectangle(0, 450, 122, 132); // mid floor
        do drawRectangle(0, 25, 122, 152); // AmongUs
        do drawRectangle(470, 510, 184, 254); // right step up
        do drawRectangle(50, 90, 214, 254); // first step
        do drawRectangle(50, 90, 158, 182); // AmongUsEye
        do drawRectangle(125, 145, 164, 254); // second step
        do drawRectangle(110, 145, 122, 139); // second step head
        do drawRectangle(200, 280, 234, 254); // third step
        do drawRectangle(300, 330, 170, 230); // fourth step
        do drawRectangle(380, 420, 170, 254); // fifth step

        do drawRectangle(0, 70, 50, 130); // TEST ONLY
        return;
    }

    method void eraseLevel4() {
        do Screen.setColor(false);
        do drawRectangle(0, 510, 0, 254);
        return;
    }

    method void eraseLevel5() {
        do Screen.setColor(false);
        do drawRectangle(0, 70, 50, 130);
        return;
    }

    method void drawLevel5() {
        do Screen.setColor(true);
        do drawRectangle(0, 70, 50, 130);
        return;
    }

    // API for moving tiles

    method void drawRectangle(int rxL, int rxR, int ryU, int ryD) {
        do Screen.drawRectangle(rxL, ryU, rxR, ryD);
        return;
    }

    method void updateMovingSquare(int rxLi, int rxRi, int ryUi, int ryDi, 
                                    int rxLf, int rxRf, int ryUf, int ryDf,
                                    int duration, bool back, bool set) {
        var int xL, xR, yU, yD;
        var int progress;
        do Screen.setColor(set);
        if(back = false) {
            let progress = time / duration;
            let progress = (time - (progress * duration));
            let progress = (progress * 50) / duration;
            let xL = ((rxLi * (50 - progress)) + (rxLf * progress)) / 50;
            let xR = ((rxRi * (50 - progress)) + (rxRf * progress)) / 50;
            let yU = ((ryUi * (50 - progress)) + (ryUf * progress)) / 50;
            let yD = ((ryDi * (50 - progress)) + (ryDf * progress)) / 50;
        }
        if(back = true) {
            let progress = time / (2 * duration);
            let progress = (time - (progress * (2 * duration)));
            let progress = (progress * 50) / duration;
            if(progress > 50) {
                let progress = progress - 50;
                let xL = ((rxLi * progress) + (rxLf * (50 - progress))) / 50;
                let xR = ((rxRi * progress) + (rxRf * (50 - progress))) / 50;
                let yU = ((ryUi * progress) + (ryUf * (50 - progress))) / 50;
                let yD = ((ryDi * progress) + (ryDf * (50 - progress))) / 50;
            }
            else {
                let xL = ((rxLi * (50 - progress)) + (rxLf * progress)) / 50;
                let xR = ((rxRi * (50 - progress)) + (rxRf * progress)) / 50;
                let yU = ((ryUi * (50 - progress)) + (ryUf * progress)) / 50;
                let yD = ((ryDi * (50 - progress)) + (ryDf * progress)) / 50;
            }
        }
        do Screen.drawRectangle(xL, yU, xR, yD);
        return;
    }

    method void drawTriangle(int x1, int y1, int x2, int y2, bool fill) {
        var int start, end, step;
        if(fill = false) {
            do Screen.drawLine(x1, y1, x2, y2);
        }
        if(fill = true) {
            if(y1 < y2) {
                do drawTriangleAux(x1, y1, x2, y2, y2);
            }
            else {
                do drawTriangleAux(x1, y1, x2, y2, y1);
            }
        }
        return;
    }

    method void drawTriangleAux(int x1, int y1, int x2, int y2, int bottom) {
        var int midx, midy;
        let midx = (x1 + x2) / 2;
        let midy = (y1 + y2) / 2;
        if(x1 > x2) {
            return;
        }
        else {
            do Screen.drawLine(midx, bottom, midx, midy);
            do drawTriangleAux(x1, y1, midx - 1, midy, bottom);
            do drawTriangleAux(midx + 1, midy, x2, y2, bottom);
        }
        return;
    }
}