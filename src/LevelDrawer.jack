class LevelDrawer {
    field int time;

    method int getTime() { return time; }

    /*
        function explanation:
            drawLevel: draw tiles first time.
            eraseLevel: clear all tiles.
            updateLevel: update moving tiles.
    */

    constructor LevelDrawer new() {
        let time = 0;
        return this;
    }

    method void updateTime() {
        let time = time + 1;
        if(time > 10000) {
            let time = time - 10000;
        }
        return;
    }

    method void drawLevelMain(int level) {
        if(level = 1) {
            do drawLevel1();
        }
        if(level = 2) {
            do drawLevel2();
        }
        if(level = 3) {
            do drawLevel3();
        }
        if(level = 4) {
            do drawLevel4();
        }
        if(level = 5) {
            do drawLevel5();
        }
        if(level > 5) {
            //do drawEND(level);
            do eraseLevel5();
        }
        return;
    }

    method void eraseLevelMain(int level) {
        if(level = 1) {
            do eraseLevel1();
        }
        if(level = 2) {
            do eraseLevel2();
        }
        if(level = 3) {
            do eraseLevel3();
        }
        if(level = 4) {
            do eraseLevel4();
        }
        if(level = 5) {
            do eraseLevel5();
        }
        return;
    }

    method void updateLevelMain(int level) {
        if(level = 1) {
            do updateLevel1(true);
        }
        if(level = 2) {
            do updateLevel2();
        }
        if(level = 3) {
            do updateLevel3(true);
        }
        return;
    }

    method void Level1design() {
        do drawRectangle(0, 450, 127, 137); // mid floor
        do drawRectangle(0, 25, 122, 152); // AmongUs
        do drawRectangle(470, 510, 194, 254); // right step up
        do drawRectangle(50, 90, 214, 254); // first step
        do drawRectangle(50, 80, 158, 182); // AmongUsEye
        do drawRectangle(125, 145, 170, 254); // second step
        do drawRectangle(110, 145, 127, 146); // second step head
        do drawRectangle(200, 280, 234, 254); // third step
        // do drawRectangle(200, 250, 160, 162); // place item 1
        do drawRectangle(300, 330, 170, 230); // fourth step
        do drawRectangle(380, 420, 170, 254); // fifth step
        // to upperhalf
        do drawRectangle(380, 430, 112, 127); // up1
        do drawRectangle(460, 510, 55, 75); // up2
        do drawRectangle(368, 370, 30, 85); // wall b/w 13
        do drawRectangle(300, 360, 30, 50); // up3
        do drawRectangle(180, 240, 30, 50); // up4
        do drawRectangle(120, 122, 30, 127); // wall b/w 45
        // end stairs
        do drawRectangle(0, 25, 20, 130); // stair 1
        do drawRectangle(0, 55, 52, 130); // stair 2
        do drawRectangle(0, 85, 87, 130); // stair 3
        return;
    }

    method void drawLevel1() {
        do Screen.setColor(true);
        do Level1design();

        do updateLevel1(true);
        return;
    }

    method void updateLevel1(bool b) {
        do drawEatThis(b);
        do drawJump(b);
        do drawKeyboard(b);
        do drawGoUP(b);
        return;
    }

    method void eraseLevel1() {
        do Screen.setColor(false);
        do Level1design();

        do updateLevel1(false);
        return;
    }
    

    method void drawLevel2() {
        do Screen.setColor(true);

        do drawRectangle(35, 80, 239, 254); // lvl2 1
        do drawRectangle(410, 450, 85, 95); // lvl2 4
        do drawRectangle(10, 50, 130, 140); // place item 2
        do drawRectangle(10, 50, 20, 30); // lvl2 5

        do updateLevel2();
        return;
    }

    

    method void eraseLevel2() {
        /** Remember to erase after finish design*/
        do Screen.setColor(false);
        do drawRectangle(35, 80, 239, 254); // lvl2 1
        do drawRectangle(410, 450, 85, 95); // lvl2 4
        do drawRectangle(10, 50, 130, 140); // place item 2
        do drawRectangle(10, 50, 20, 30); // lvl2 5
        do updateMovingSquare(100, 170, 200, 220, 220, 290, 200, 220, 300, true, false); // moving plate 1
        do updateMovingSquare(400, 470, 200, 220, 310, 380, 200, 220, 300, true, false); // moving plate 2
        do updateMovingSquare(180, 185, 130, 180, 180, 185, 204, 254, 86, true, false); // moving obstacle 1
        do updateMovingSquare(420, 460, 170, 180, 460, 500, 80, 180, 173, true, false); // lvl2 3
        do updateMovingSquare(320, 360, 110, 130, 320, 360, 30, 130, 160, true, false); // expand stand 1
        do updateMovingSquare(230, 270, 30, 130, 230, 270, 110, 130, 160, true, false); // expand stand 2
        do updateMovingSquare(105, 125, 110, 130, 60, 170, 50, 130, 270, true, false); // expand stand 3
        
        do drawLv2Text(false);
        return;
    }

    method void updateLevel2() {
        do updateTime();
        do drawLv2Text(true);
        do updateMovingSquare(100, 170, 200, 220, 220, 290, 200, 220, 300, true, true); // moving plate 1
        do updateMovingSquare(400, 470, 200, 220, 310, 380, 200, 220, 300, true, true); // moving plate 2
        do updateMovingSquare(180, 185, 130, 180, 180, 185, 204, 254, 86, true, true); // moving obstacle 1
        do updateMovingSquare(420, 460, 170, 180, 460, 500, 80, 180, 173, true, true); // lvl2 3
        do updateMovingSquare(320, 360, 110, 130, 320, 360, 30, 130, 160, true, true); // expand stand 1
        do updateMovingSquare(230, 270, 30, 130, 230, 270, 110, 130, 160, true, true); // expand stand 2
        do updateMovingSquare(105, 125, 110, 130, 60, 170, 50, 130, 270, true, true); // expand stand 3

        return;
    }

    method void Level3design() {
        do drawRectangle(20, 160, 244, 254); // lvl3 1
        do drawTriangle(90, 244, 160, 194, true); // tri 1
        do drawRectangle(160, 210, 194, 204); // lvl3 2
        do drawRectangle(275, 325, 214, 254); // lvl3 3
        do drawTriangle(220, 254, 280-5, 214, true); // tri 2
        do drawTriangle(325, 214, 380, 254, true); // tri 3
        do drawRectangle(450, 510, 214, 254); // lvl3 4
        do drawTriangle(415, 254, 450, 214, true); // tri 4

        do drawRectangle(450, 490, 155, 160); // lvl3 stair 1
        do drawRectangle(470, 510, 115, 120); // lvl3 stair 2
        do drawRectangle(450, 490, 75, 80); // lvl3 stair 3
        do drawRectangle(445, 450, 75, 160); // lvl3 stair wall

        do drawRectangle(360, 400, 70, 80); // lvl3 up 1
        do drawRectangle(200, 240, 70, 80); // lvl3 up 2
        // do drawRectangle(270, 330, 108, 118); // lvl3 item
        do drawRectangle(300-8, 308, 43, 95); // Xmas tree


        return;
    }

    method void drawLevel3() {
        do Screen.setColor(true);
        do Level3design();

        do updateLevel3(true);
        return;
    }

    method void eraseLevel3() {
        do Screen.setColor(false);
        do Level3design();

        do updateLevel3(false);

        do drawMerry(false);
        do drawXmas(false);
        return;
    }

    method void updateLevel3(bool b) {
        do drawWatchOut(b);
        do Screen.setColor(b);

        do drawTriangle(300, 8, 315, 23, true); // Xmas tree R1
        do drawTriangle(300, 16, 322, 38, true); // Xmas tree R2
        do drawTriangle(300, 29, 329, 55, true); // Xmas tree R3
        do drawTriangle(300+5, 43, 337, 73, true); // Xmas tree R4
        
        do drawTriangle(285, 23, 300, 8, true); // Xmas tree L1
        do drawTriangle(278, 38, 300, 16, true); // Xmas tree L2
        do drawTriangle(271, 55, 300, 29, true); // Xmas tree L3
        do drawTriangle(263, 73, 300-5, 43, true); // Xmas tree L4
        // do drawTriangle(300, 8, 330, 70, true); // tri 5-1
        // do drawTriangle(275, 70, 300, 8, true); // tri 5-2

        do drawMerry(true);
        do drawXmas(true);
        return;
    }

    

    method void drawLevel4() {
        do Screen.setColor(true);
        do drawRectangle(0, 510, 0, 254); // dark mode

        do drawRectangle(0, 450, 122, 132); // mid floor
        do drawRectangle(0, 25, 122, 152); // AmongUs
        do drawRectangle(470, 510, 184, 254); // right step up
        do drawRectangle(50, 90, 214, 254); // first step
        do drawRectangle(50, 90, 158, 182); // AmongUsEye
        do drawRectangle(125, 145, 164, 254); // second step
        do drawRectangle(110, 145, 122, 139); // second step head
        do drawRectangle(200, 280, 234, 254); // third step
        do drawRectangle(300, 330, 170, 230); // fourth step
        do drawRectangle(380, 420, 170, 254); // fifth step

        do drawRectangle(0, 70, 50, 130); // TEST ONLY
        return;
    }

    method void eraseLevel4() {
        do Screen.setColor(false);
        do drawRectangle(0, 510, 0, 254);
        return;
    }

    method void eraseLevel5() {
        do Screen.setColor(false);
        do drawRectangle(0, 70, 50, 130);
        return;
    }

    method void drawLevel5() {
        do Screen.setColor(true);
        do drawRectangle(0, 70, 50, 130);
        return;
    }

    // API for moving tiles

    method void drawRectangle(int rxL, int rxR, int ryU, int ryD) {
        do Screen.drawRectangle(rxL, ryU, rxR, ryD);
        return;
    }

    method void updateMovingSquare(int rxLi, int rxRi, int ryUi, int ryDi, 
                                    int rxLf, int rxRf, int ryUf, int ryDf,
                                    int duration, bool back, bool set) {
        var int xLp, xRp, yUp, yDp;
        var int xLn, xRn, yUn, yDn;
        var int pTime;
        var int progress;
        let pTime = time - 1;
        // calculate last step
        if(back = false) {
            let progress = pTime / duration;
            let progress = (pTime - (progress * duration));
            let progress = (progress * 50) / duration;
            let xLp = ((rxLi * (50 - progress)) + (rxLf * progress)) / 50;
            let xRp = ((rxRi * (50 - progress)) + (rxRf * progress)) / 50;
            let yUp = ((ryUi * (50 - progress)) + (ryUf * progress)) / 50;
            let yDp = ((ryDi * (50 - progress)) + (ryDf * progress)) / 50;
        }
        if(back = true) {
            let progress = pTime / (2 * duration);
            let progress = (pTime - (progress * (2 * duration)));
            let progress = (progress * 50) / duration;
            if(progress > 50) {
                let progress = progress - 50;
                let xLp = ((rxLi * progress) + (rxLf * (50 - progress))) / 50;
                let xRp = ((rxRi * progress) + (rxRf * (50 - progress))) / 50;
                let yUp = ((ryUi * progress) + (ryUf * (50 - progress))) / 50;
                let yDp = ((ryDi * progress) + (ryDf * (50 - progress))) / 50;
            }
            else {
                let xLp = ((rxLi * (50 - progress)) + (rxLf * progress)) / 50;
                let xRp = ((rxRi * (50 - progress)) + (rxRf * progress)) / 50;
                let yUp = ((ryUi * (50 - progress)) + (ryUf * progress)) / 50;
                let yDp = ((ryDi * (50 - progress)) + (ryDf * progress)) / 50;
            }
        }
        // calculate next step
        if(back = false) {
            let progress = time / duration;
            let progress = (time - (progress * duration));
            let progress = (progress * 50) / duration;
            let xLn = ((rxLi * (50 - progress)) + (rxLf * progress)) / 50;
            let xRn = ((rxRi * (50 - progress)) + (rxRf * progress)) / 50;
            let yUn = ((ryUi * (50 - progress)) + (ryUf * progress)) / 50;
            let yDn = ((ryDi * (50 - progress)) + (ryDf * progress)) / 50;
        }
        if(back = true) {
            let progress = time / (2 * duration);
            let progress = (time - (progress * (2 * duration)));
            let progress = (progress * 50) / duration;
            if(progress > 50) {
                let progress = progress - 50;
                let xLn = ((rxLi * progress) + (rxLf * (50 - progress))) / 50;
                let xRn = ((rxRi * progress) + (rxRf * (50 - progress))) / 50;
                let yUn = ((ryUi * progress) + (ryUf * (50 - progress))) / 50;
                let yDn = ((ryDi * progress) + (ryDf * (50 - progress))) / 50;
            }
            else {
                let xLn = ((rxLi * (50 - progress)) + (rxLf * progress)) / 50;
                let xRn = ((rxRi * (50 - progress)) + (rxRf * progress)) / 50;
                let yUn = ((ryUi * (50 - progress)) + (ryUf * progress)) / 50;
                let yDn = ((ryDi * (50 - progress)) + (ryDf * progress)) / 50;
            }
        }
        do Screen.setColor(false);
        do Screen.drawRectangle(xLp, yUp, xRp, yDp);
        
        if(set = true) {
            do Screen.setColor(true);
        }
        else {
            do Screen.setColor(false);
        }
        do Screen.drawRectangle(xLn, yUn, xRn, yDn);
        do Screen.setColor(true);
        return;
    }

    method void drawTriangle(int x1, int y1, int x2, int y2, bool fill) {
        var int a, b, diff, dx, dy;
        let a = 0;
        let b = 0;
        let diff = 0;
        let dx = x2 - x1;
        let dy = y2 - y1;
        if(fill = false) {
            do Screen.drawLine(x1, y1, x2, y2);
        }
        if(fill = true) {
            if(dy > 0) { // (\)
                while(~((a = dx) & (b = dy))) {
                    if(diff < 0) {
                        do Screen.drawLine(x1 + a, y2, x1 + a, y1 + b);
                        let a = a + 1;
                        let diff = diff + dy;
                    } 
                    else {
                        let b = b + 1;
                        let diff = diff - dx;
                    }  
                }
            }
            else { // (/)
                let dy = -1 * dy;
                while(~((a = dx) & (b = dy))) {
                    if(diff < 0) {
                        do Screen.drawLine(x1 + a, y1 - b, x1 + a, y1);
                        let a = a + 1;
                        let diff = diff + dy;
                    } 
                    else {
                        let b = b + 1;
                        let diff = diff - dx;
                    }  
                }
            }
        }
        return;
    }

    // Cool text & stuff
    method void drawEatThis(bool set) {
        var int memAddress; 
        let memAddress = 16384 + (192 * 32) + (192 / 16);
        // column 0
        do Memory.poke(memAddress +128, 31744 & set);
        do Memory.poke(memAddress +160, -7048 & set);
        do Memory.poke(memAddress +192, -15288 & set);
        do Memory.poke(memAddress +224, 19560 & set);
        do Memory.poke(memAddress +256, 30776 & set);
        do Memory.poke(memAddress +288, 536 & set);
        do Memory.poke(memAddress +320, 1008 & set);
        do Memory.poke(memAddress +416, 64 & set);
        do Memory.poke(memAddress +448, 8256 & set);
        do Memory.poke(memAddress +480, 8260 & set);
        do Memory.poke(memAddress +512, 16964 & set);
        do Memory.poke(memAddress +544, 20468 & set);
        do Memory.poke(memAddress +576, -30324 & set);
        do Memory.poke(memAddress +608, -26357 & set);
        do Memory.poke(memAddress +640, -28280 & set);
        do Memory.poke(memAddress +672, 360 & set);
        do Memory.poke(memAddress +704, 56 & set);
        // column 1
        do Memory.poke(memAddress +1, 8 & set);
        do Memory.poke(memAddress +33, 8 & set);
        do Memory.poke(memAddress +65, 120 & set);
        do Memory.poke(memAddress +97, 28 & set);
        do Memory.poke(memAddress +129, 14 & set);
        do Memory.poke(memAddress +161, 8 & set);
        do Memory.poke(memAddress +193, 203 & set);
        do Memory.poke(memAddress +225, 120 & set);
        do Memory.poke(memAddress +257, 48 & set);
        do Memory.poke(memAddress +353, 896 & set);
        do Memory.poke(memAddress +385, 768 & set);
        do Memory.poke(memAddress +417, 780 & set);
        do Memory.poke(memAddress +449, 1798 & set);
        do Memory.poke(memAddress +481, 1542 & set);
        do Memory.poke(memAddress +513, 124 & set);
        do Memory.poke(memAddress +545, 3136 & set);
        do Memory.poke(memAddress +577, 3168 & set);
        do Memory.poke(memAddress +609, 48 & set);
        do Memory.poke(memAddress +641, 12 & set);
        do Memory.poke(memAddress +737, ~32767 & set);
        do Memory.poke(memAddress +769, 32256 & set);
        // column 2
        do Memory.poke(memAddress +130, 1792 & set);
        do Memory.poke(memAddress +162, 7936 & set);
        do Memory.poke(memAddress +194, 896 & set);
        do Memory.poke(memAddress +226, 1728 & set);
        do Memory.poke(memAddress +258, 1088 & set);
        do Memory.poke(memAddress +290, 1024 & set);
        do Memory.poke(memAddress +322, 1024 & set);
        do Memory.poke(memAddress +354, 1024 & set);
        do Memory.poke(memAddress +386, 1024 & set);
        do Memory.poke(memAddress +418, 1024 & set);
        do Memory.poke(memAddress +450, 1564 & set);
        do Memory.poke(memAddress +482, 562 & set);
        do Memory.poke(memAddress +514, 545 & set);
        do Memory.poke(memAddress +546, 307 & set);
        do Memory.poke(memAddress +578, 406 & set);
        do Memory.poke(memAddress +610, 252 & set);
        do Memory.poke(memAddress +642, 24 & set);
        do Memory.poke(memAddress +674, 4 & set);
        do Memory.poke(memAddress +706, 6 & set);
        do Memory.poke(memAddress +738, 3 & set);
        return;
    }

    method void drawJump(bool set) {
        var int memAddress; 
        let memAddress = 16384 + (96 * 32) + (448 / 16);
        // column 0
        do Memory.poke(memAddress, 14336 & set);
        do Memory.poke(memAddress +32, 1920 & set);
        do Memory.poke(memAddress +64, 116 & set);
        do Memory.poke(memAddress +96, 28 & set);
        do Memory.poke(memAddress +128, 60 & set);
        do Memory.poke(memAddress +160, 232 & set);
        do Memory.poke(memAddress +192, 392 & set);
        do Memory.poke(memAddress +224, 776 & set);
        do Memory.poke(memAddress +256, 1032 & set);
        do Memory.poke(memAddress +288, 2064 & set);
        do Memory.poke(memAddress +320, 4112 & set);
        do Memory.poke(memAddress +352, 12304 & set);
        do Memory.poke(memAddress +384, 8192 & set);
        do Memory.poke(memAddress +416, 24576 & set);
        do Memory.poke(memAddress +448, 16384 & set);
        do Memory.poke(memAddress +480, -16384 & set);
        do Memory.poke(memAddress +512, ~32767 & set);
        do Memory.poke(memAddress +2176, ~32767 & set);
        do Memory.poke(memAddress +2208, ~32767 & set);
        do Memory.poke(memAddress +2240, ~32767 & set);
        do Memory.poke(memAddress +2272, 16384 & set);
        do Memory.poke(memAddress +2304, 24576 & set);
        do Memory.poke(memAddress +2336, 8192 & set);
        do Memory.poke(memAddress +2368, 4096 & set);
        do Memory.poke(memAddress +2400, 4096 & set);
        do Memory.poke(memAddress +2432, 2048 & set);
        do Memory.poke(memAddress +2464, 1024 & set);
        do Memory.poke(memAddress +2496, 1536 & set);
        do Memory.poke(memAddress +2528, 768 & set);
        do Memory.poke(memAddress +2560, 256 & set);
        do Memory.poke(memAddress +2592, 128 & set);
        do Memory.poke(memAddress +2624, 96 & set);
        do Memory.poke(memAddress +2656, 48 & set);
        do Memory.poke(memAddress +2688, 24 & set);
        do Memory.poke(memAddress +2720, 6 & set);
        do Memory.poke(memAddress +2752, 1 & set);
        // column 1
        do Memory.poke(memAddress +193, -16384 & set);
        do Memory.poke(memAddress +225, 30720 & set);
        do Memory.poke(memAddress +257, -14592 & set);
        do Memory.poke(memAddress +289, -32640 & set);
        do Memory.poke(memAddress +321, ~32767 & set);
        do Memory.poke(memAddress +481, 6144 & set);
        do Memory.poke(memAddress +513, 12288 & set);
        do Memory.poke(memAddress +545, -8191 & set);
        do Memory.poke(memAddress +577, 1 & set);
        do Memory.poke(memAddress +609, 1 & set);
        do Memory.poke(memAddress +641, 1 & set);
        do Memory.poke(memAddress +673, 2 & set);
        do Memory.poke(memAddress +705, 1026 & set);
        do Memory.poke(memAddress +737, 1026 & set);
        do Memory.poke(memAddress +769, 1028 & set);
        do Memory.poke(memAddress +801, 1028 & set);
        do Memory.poke(memAddress +833, 3076 & set);
        do Memory.poke(memAddress +865, 2052 & set);
        do Memory.poke(memAddress +897, 6148 & set);
        do Memory.poke(memAddress +929, 4100 & set);
        do Memory.poke(memAddress +961, 12292 & set);
        do Memory.poke(memAddress +993, -8188 & set);
        do Memory.poke(memAddress +1025, 4 & set);
        do Memory.poke(memAddress +1057, 4 & set);
        do Memory.poke(memAddress +1089, 4 & set);
        do Memory.poke(memAddress +1121, 4 & set);
        do Memory.poke(memAddress +1153, 4 & set);
        do Memory.poke(memAddress +1185, 4 & set);
        do Memory.poke(memAddress +1217, 8 & set);
        do Memory.poke(memAddress +1249, 4104 & set);
        do Memory.poke(memAddress +1281, 12296 & set);
        do Memory.poke(memAddress +1313, 12296 & set);
        do Memory.poke(memAddress +1345, 26632 & set);
        do Memory.poke(memAddress +1377, 18440 & set);
        do Memory.poke(memAddress +1409, -14328 & set);
        do Memory.poke(memAddress +1441, -29688 & set);
        do Memory.poke(memAddress +1473, 1032 & set);
        do Memory.poke(memAddress +1505, 1032 & set);
        do Memory.poke(memAddress +1537, 1032 & set);
        do Memory.poke(memAddress +1569, 1032 & set);
        do Memory.poke(memAddress +1601, 1032 & set);
        do Memory.poke(memAddress +1633, 1032 & set);
        do Memory.poke(memAddress +1665, 4 & set);
        do Memory.poke(memAddress +1697, 4 & set);
        do Memory.poke(memAddress +1729, 4 & set);
        do Memory.poke(memAddress +1761, 4 & set);
        do Memory.poke(memAddress +1793, 4 & set);
        do Memory.poke(memAddress +1825, -8188 & set);
        do Memory.poke(memAddress +1857, 8196 & set);
        do Memory.poke(memAddress +1889, 4100 & set);
        do Memory.poke(memAddress +1921, 4098 & set);
        do Memory.poke(memAddress +1953, 4096 & set);
        do Memory.poke(memAddress +1985, 8194 & set);
        do Memory.poke(memAddress +2017, 8194 & set);
        do Memory.poke(memAddress +2049, -8191 & set);
        do Memory.poke(memAddress +2081, 8193 & set);
        do Memory.poke(memAddress +2113, 8193 & set);
        do Memory.poke(memAddress +2145, 24577 & set);
        do Memory.poke(memAddress +2177, 16384 & set);
        do Memory.poke(memAddress +2209, 16384 & set);
        do Memory.poke(memAddress +2401, ~32767 & set);
        // column 2
        do Memory.poke(memAddress +130, 32 & set);
        do Memory.poke(memAddress +162, 62 & set);
        do Memory.poke(memAddress +194, 1 & set);
        do Memory.poke(memAddress +354, 1 & set);
        do Memory.poke(memAddress +386, 1 & set);
        do Memory.poke(memAddress +418, 1 & set);
        do Memory.poke(memAddress +450, 1 & set);
        do Memory.poke(memAddress +482, 1 & set);
        do Memory.poke(memAddress +514, 1 & set);
        do Memory.poke(memAddress +546, 1 & set);
        do Memory.poke(memAddress +642, 64 & set);
        do Memory.poke(memAddress +674, 192 & set);
        do Memory.poke(memAddress +706, 128 & set);
        do Memory.poke(memAddress +738, 128 & set);
        do Memory.poke(memAddress +770, 128 & set);
        do Memory.poke(memAddress +802, 128 & set);
        do Memory.poke(memAddress +834, 128 & set);
        do Memory.poke(memAddress +866, 192 & set);
        do Memory.poke(memAddress +898, 96 & set);
        do Memory.poke(memAddress +930, 32 & set);
        do Memory.poke(memAddress +962, 24 & set);
        do Memory.poke(memAddress +994, 15 & set);
        do Memory.poke(memAddress +1026, 3 & set);
        do Memory.poke(memAddress +1186, 192 & set);
        do Memory.poke(memAddress +1218, 192 & set);
        do Memory.poke(memAddress +1250, 192 & set);
        do Memory.poke(memAddress +1282, 160 & set);
        do Memory.poke(memAddress +1314, 416 & set);
        do Memory.poke(memAddress +1346, 272 & set);
        do Memory.poke(memAddress +1378, 784 & set);
        do Memory.poke(memAddress +1410, 520 & set);
        do Memory.poke(memAddress +1442, 1545 & set);
        do Memory.poke(memAddress +1474, 1039 & set);
        do Memory.poke(memAddress +1506, 3078 & set);
        do Memory.poke(memAddress +1538, 6 & set);
        do Memory.poke(memAddress +1570, 4 & set);
        do Memory.poke(memAddress +1794, 31 & set);
        do Memory.poke(memAddress +1826, 49 & set);
        do Memory.poke(memAddress +1858, 96 & set);
        do Memory.poke(memAddress +1890, 64 & set);
        do Memory.poke(memAddress +1922, 64 & set);
        do Memory.poke(memAddress +1954, 64 & set);
        do Memory.poke(memAddress +1986, 32 & set);
        do Memory.poke(memAddress +2018, 30 & set);
        do Memory.poke(memAddress +2050, 3 & set);
        do Memory.poke(memAddress +2370, 28 & set);
        do Memory.poke(memAddress +2402, 31 & set);
        do Memory.poke(memAddress +2434, 15 & set);
        do Memory.poke(memAddress +2466, 15 & set);
        do Memory.poke(memAddress +2498, 14 & set);
        do Memory.poke(memAddress +2530, 14 & set);
        do Memory.poke(memAddress +2562, 12 & set);
        do Memory.poke(memAddress +2594, 12 & set);
        do Memory.poke(memAddress +2626, 12 & set);
        do Memory.poke(memAddress +2722, 12 & set);
        do Memory.poke(memAddress +2754, 12 & set);
        return;
    }

    method void drawKeyboard(bool set) {
        var int memAddress; 
        let memAddress = 16384 + (64 * 32) + (160 / 16);
        // column 0
        do Memory.poke(memAddress +128, 8 & set);
        do Memory.poke(memAddress +160, -4088 & set);
        do Memory.poke(memAddress +192, 4120 & set);
        do Memory.poke(memAddress +224, 4112 & set);
        do Memory.poke(memAddress +256, 4112 & set);
        do Memory.poke(memAddress +288, -4080 & set);
        do Memory.poke(memAddress +320, 16 & set);
        do Memory.poke(memAddress +352, 16 & set);
        do Memory.poke(memAddress +384, 16 & set);
        do Memory.poke(memAddress +416, 16 & set);
        do Memory.poke(memAddress +448, 16 & set);
        do Memory.poke(memAddress +480, 16 & set);
        do Memory.poke(memAddress +512, 16 & set);
        do Memory.poke(memAddress +544, -4080 & set);
        do Memory.poke(memAddress +576, 24 & set);
        do Memory.poke(memAddress +608, 15 & set);
        do Memory.poke(memAddress +1024, ~32767 & set);
        do Memory.poke(memAddress +1056, -4096 & set);
        do Memory.poke(memAddress +1088, 4094 & set);
        do Memory.poke(memAddress +1120, 2 & set);
        do Memory.poke(memAddress +1152, 2 & set);
        do Memory.poke(memAddress +1184, 2 & set);
        do Memory.poke(memAddress +1216, 2 & set);
        do Memory.poke(memAddress +1248, 2 & set);
        do Memory.poke(memAddress +1280, 2 & set);
        do Memory.poke(memAddress +1312, 2 & set);
        do Memory.poke(memAddress +1344, -32766 & set);
        do Memory.poke(memAddress +1376, -30 & set);
        do Memory.poke(memAddress +1408, 30 & set);
        do Memory.poke(memAddress +1440, 2 & set);
        do Memory.poke(memAddress +1472, 4 & set);
        do Memory.poke(memAddress +1504, 4 & set);
        do Memory.poke(memAddress +1536, -16376 & set);
        do Memory.poke(memAddress +1568, 16376 & set);
        // column 1
        do Memory.poke(memAddress +33, 24576 & set);
        do Memory.poke(memAddress +65, 6144 & set);
        do Memory.poke(memAddress +97, 1536 & set);
        do Memory.poke(memAddress +129, 1024 & set);
        do Memory.poke(memAddress +161, 1027 & set);
        do Memory.poke(memAddress +193, 1024 & set);
        do Memory.poke(memAddress +225, 1024 & set);
        do Memory.poke(memAddress +257, 1024 & set);
        do Memory.poke(memAddress +289, -1023 & set);
        do Memory.poke(memAddress +321, 1055 & set);
        do Memory.poke(memAddress +353, 2096 & set);
        do Memory.poke(memAddress +385, 2080 & set);
        do Memory.poke(memAddress +417, 2080 & set);
        do Memory.poke(memAddress +449, 6176 & set);
        do Memory.poke(memAddress +481, -4064 & set);
        do Memory.poke(memAddress +513, 62 & set);
        do Memory.poke(memAddress +545, 3 & set);
        do Memory.poke(memAddress +929, -512 & set);
        do Memory.poke(memAddress +961, 992 & set);
        do Memory.poke(memAddress +993, 28 & set);
        do Memory.poke(memAddress +1025, 3075 & set);
        do Memory.poke(memAddress +1057, 15360 & set);
        do Memory.poke(memAddress +1089, 1536 & set);
        do Memory.poke(memAddress +1121, 512 & set);
        do Memory.poke(memAddress +1153, 32256 & set);
        do Memory.poke(memAddress +1185, 16384 & set);
        do Memory.poke(memAddress +1217, 24576 & set);
        do Memory.poke(memAddress +1249, 14336 & set);
        do Memory.poke(memAddress +1313, -2048 & set);
        do Memory.poke(memAddress +1345, 2047 & set);
        do Memory.poke(memAddress +1377, 0 & set);
        do Memory.poke(memAddress +1473, -8192 & set);
        do Memory.poke(memAddress +1505, 16128 & set);
        do Memory.poke(memAddress +1537, 255 & set);
        // column 2
        do Memory.poke(memAddress +2, 7 & set);
        do Memory.poke(memAddress +226, 8 & set);
        do Memory.poke(memAddress +258, 15 & set);
        do Memory.poke(memAddress +290, 1 & set);
        do Memory.poke(memAddress +418, 224 & set);
        do Memory.poke(memAddress +450, 56 & set);
        do Memory.poke(memAddress +482, 15 & set);
        do Memory.poke(memAddress +834, ~32767 & set);
        do Memory.poke(memAddress +866, -256 & set);
        do Memory.poke(memAddress +898, 252 & set);
        do Memory.poke(memAddress +930, 12291 & set);
        do Memory.poke(memAddress +962, 14336 & set);
        do Memory.poke(memAddress +994, 19512 & set);
        do Memory.poke(memAddress +1026, 29743 & set);
        do Memory.poke(memAddress +1058, -13277 & set);
        do Memory.poke(memAddress +1090, -31710 & set);
        do Memory.poke(memAddress +1122, -31682 & set);
        do Memory.poke(memAddress +1154, 1030 & set);
        do Memory.poke(memAddress +1186, 4 & set);
        do Memory.poke(memAddress +1218, -16380 & set);
        do Memory.poke(memAddress +1250, 16128 & set);
        do Memory.poke(memAddress +1282, 510 & set);
        do Memory.poke(memAddress +1314, 1 & set);
        do Memory.poke(memAddress +1378, -8192 & set);
        do Memory.poke(memAddress +1410, 7680 & set);
        do Memory.poke(memAddress +1442, 960 & set);
        do Memory.poke(memAddress +1474, 63 & set);
        // column 3
        do Memory.poke(memAddress +739, -8192 & set);
        do Memory.poke(memAddress +771, 16128 & set);
        do Memory.poke(memAddress +803, 248 & set);
        do Memory.poke(memAddress +835, 7 & set);
        do Memory.poke(memAddress +867, -8192 & set);
        do Memory.poke(memAddress +899, 6144 & set);
        do Memory.poke(memAddress +931, -1808 & set);
        do Memory.poke(memAddress +963, 6160 & set);
        do Memory.poke(memAddress +995, -3824 & set);
        do Memory.poke(memAddress +1027, 25008 & set);
        do Memory.poke(memAddress +1059, 224 & set);
        do Memory.poke(memAddress +1091, ~32767 & set);
        do Memory.poke(memAddress +1123, -2047 & set);
        do Memory.poke(memAddress +1155, 1984 & set);
        do Memory.poke(memAddress +1187, 60 & set);
        do Memory.poke(memAddress +1219, 3 & set);
        do Memory.poke(memAddress +1251, ~32767 & set);
        do Memory.poke(memAddress +1283, -2048 & set);
        do Memory.poke(memAddress +1315, 3840 & set);
        do Memory.poke(memAddress +1347, 504 & set);
        do Memory.poke(memAddress +1379, 15 & set);
        // column 4
        do Memory.poke(memAddress +644, -512 & set);
        do Memory.poke(memAddress +676, 960 & set);
        do Memory.poke(memAddress +708, 112 & set);
        do Memory.poke(memAddress +740, 31 & set);
        do Memory.poke(memAddress +868, 0 & set);
        do Memory.poke(memAddress +932, 0 & set);
        do Memory.poke(memAddress +964, 3 & set);
        do Memory.poke(memAddress +996, -8191 & set);
        do Memory.poke(memAddress +1028, 16256 & set);
        do Memory.poke(memAddress +1060, 240 & set);
        do Memory.poke(memAddress +1092, 15 & set);
        do Memory.poke(memAddress +1124, 0 & set);
        do Memory.poke(memAddress +1156, ~32767 & set);
        do Memory.poke(memAddress +1188, -512 & set);
        do Memory.poke(memAddress +1220, 496 & set);
        do Memory.poke(memAddress +1252, 31 & set);
        do Memory.poke(memAddress +1284, 0 & set);
        // column 5
        do Memory.poke(memAddress +581, 8128 & set);
        do Memory.poke(memAddress +613, 29310 & set);
        do Memory.poke(memAddress +645, -15357 & set);
        do Memory.poke(memAddress +677, 1024 & set);
        do Memory.poke(memAddress +709, 3072 & set);
        do Memory.poke(memAddress +741, 2048 & set);
        do Memory.poke(memAddress +773, 2048 & set);
        do Memory.poke(memAddress +805, 6144 & set);
        do Memory.poke(memAddress +837, 4096 & set);
        do Memory.poke(memAddress +869, 4096 & set);
        do Memory.poke(memAddress +901, 4096 & set);
        do Memory.poke(memAddress +933, 6144 & set);
        do Memory.poke(memAddress +965, 6128 & set);
        do Memory.poke(memAddress +997, 8207 & set);
        do Memory.poke(memAddress +1029, 24576 & set);
        do Memory.poke(memAddress +1061, -16384 & set);
        do Memory.poke(memAddress +1093, -16384 & set);
        do Memory.poke(memAddress +1125, 32704 & set);
        do Memory.poke(memAddress +1157, 127 & set);
        do Memory.poke(memAddress +1189, 0 & set);
        // column 6
        do Memory.poke(memAddress +614, -16384 & set);
        do Memory.poke(memAddress +646, -8189 & set);
        do Memory.poke(memAddress +678, 12302 & set);
        do Memory.poke(memAddress +710, 4120 & set);
        do Memory.poke(memAddress +742, 4112 & set);
        do Memory.poke(memAddress +774, 4112 & set);
        do Memory.poke(memAddress +806, -28648 & set);
        do Memory.poke(memAddress +838, -28664 & set);
        do Memory.poke(memAddress +870, -12280 & set);
        do Memory.poke(memAddress +902, 28684 & set);
        do Memory.poke(memAddress +934, 24580 & set);
        do Memory.poke(memAddress +966, 24580 & set);
        do Memory.poke(memAddress +998, -8188 & set);
        do Memory.poke(memAddress +1030, -20474 & set);
        do Memory.poke(memAddress +1062, 4098 & set);
        do Memory.poke(memAddress +1094, 4099 & set);
        do Memory.poke(memAddress +1126, -4096 & set);
        // column 7
        do Memory.poke(memAddress +615, -16384 & set);
        do Memory.poke(memAddress +647, 16385 & set);
        do Memory.poke(memAddress +679, 16385 & set);
        do Memory.poke(memAddress +711, 24577 & set);
        do Memory.poke(memAddress +743, 8193 & set);
        do Memory.poke(memAddress +775, 8193 & set);
        do Memory.poke(memAddress +807, 8193 & set);
        do Memory.poke(memAddress +839, 12288 & set);
        do Memory.poke(memAddress +871, -20480 & set);
        do Memory.poke(memAddress +903, 24576 & set);
        do Memory.poke(memAddress +935, 8192 & set);
        do Memory.poke(memAddress +967, 8192 & set);
        do Memory.poke(memAddress +999, 8192 & set);
        do Memory.poke(memAddress +1031, 8193 & set);
        do Memory.poke(memAddress +1063, 8202 & set);
        do Memory.poke(memAddress +1095, -8178 & set);
        do Memory.poke(memAddress +1127, 1 & set);
        // column 8
        do Memory.poke(memAddress +520, -2048 & set);
        do Memory.poke(memAddress +552, 4064 & set);
        do Memory.poke(memAddress +584, 60 & set);
        do Memory.poke(memAddress +616, -32701 & set);
        do Memory.poke(memAddress +648, -32544 & set);
        do Memory.poke(memAddress +680, -32528 & set);
        do Memory.poke(memAddress +712, -32520 & set);
        do Memory.poke(memAddress +744, -32516 & set);
        do Memory.poke(memAddress +776, ~32767 & set);
        do Memory.poke(memAddress +808, -256 & set);
        do Memory.poke(memAddress +840, 16892 & set);
        do Memory.poke(memAddress +872, -32761 & set);
        do Memory.poke(memAddress +904, ~32767 & set);
        do Memory.poke(memAddress +1000, -16384 & set);
        do Memory.poke(memAddress +1032, 32736 & set);
        do Memory.poke(memAddress +1064, 31 & set);
        do Memory.poke(memAddress +1096, 0 & set);
        // column 9
        do Memory.poke(memAddress +521, 1 & set);
        do Memory.poke(memAddress +553, 15 & set);
        do Memory.poke(memAddress +585, 57 & set);
        do Memory.poke(memAddress +617, 65 & set);
        do Memory.poke(memAddress +649, 192 & set);
        do Memory.poke(memAddress +681, -32704 & set);
        do Memory.poke(memAddress +713, -32672 & set);
        do Memory.poke(memAddress +745, -32720 & set);
        do Memory.poke(memAddress +777, -32752 & set);
        do Memory.poke(memAddress +809, -32744 & set);
        do Memory.poke(memAddress +841, -32760 & set);
        do Memory.poke(memAddress +873, -32760 & set);
        do Memory.poke(memAddress +905, -32764 & set);
        do Memory.poke(memAddress +937, -32761 & set);
        do Memory.poke(memAddress +969, -32766 & set);
        do Memory.poke(memAddress +1001, 3 & set);
        // column 10
        do Memory.poke(memAddress +458, -2048 & set);
        do Memory.poke(memAddress +490, 3968 & set);
        do Memory.poke(memAddress +522, 126 & set);
        do Memory.poke(memAddress +554, 2 & set);
        do Memory.poke(memAddress +586, 4034 & set);
        do Memory.poke(memAddress +618, 4035 & set);
        do Memory.poke(memAddress +650, 1985 & set);
        do Memory.poke(memAddress +682, 449 & set);
        do Memory.poke(memAddress +714, -2048 & set);
        do Memory.poke(memAddress +746, 2047 & set);
        do Memory.poke(memAddress +778, 0 & set);
        do Memory.poke(memAddress +810, 0 & set);
        do Memory.poke(memAddress +842, 0 & set);
        do Memory.poke(memAddress +874, -16384 & set);
        do Memory.poke(memAddress +906, 32752 & set);
        do Memory.poke(memAddress +938, 15 & set);
        do Memory.poke(memAddress +970, 1 & set);
        // column 11
        do Memory.poke(memAddress +459, 15 & set);
        do Memory.poke(memAddress +491, 60 & set);
        do Memory.poke(memAddress +523, 196 & set);
        do Memory.poke(memAddress +555, 774 & set);
        do Memory.poke(memAddress +587, 514 & set);
        do Memory.poke(memAddress +619, 770 & set);
        do Memory.poke(memAddress +651, 259 & set);
        do Memory.poke(memAddress +683, 385 & set);
        do Memory.poke(memAddress +715, 131 & set);
        do Memory.poke(memAddress +747, 66 & set);
        do Memory.poke(memAddress +779, 98 & set);
        do Memory.poke(memAddress +811, 52 & set);
        do Memory.poke(memAddress +843, 28 & set);
        do Memory.poke(memAddress +875, 15 & set);
        do Memory.poke(memAddress +907, 8 & set);
        // column 12
        // column -1
        do Memory.poke(memAddress +191, 256 & set);
        do Memory.poke(memAddress +223, 256 & set);
        do Memory.poke(memAddress +255, 256 & set);
        do Memory.poke(memAddress +287, 256 & set);
        do Memory.poke(memAddress +319, 256 & set);
        do Memory.poke(memAddress +351, 256 & set);
        do Memory.poke(memAddress +383, 768 & set);
        do Memory.poke(memAddress +415, 512 & set);
        do Memory.poke(memAddress +447, 512 & set);
        do Memory.poke(memAddress +479, 1536 & set);
        do Memory.poke(memAddress +511, 1024 & set);
        do Memory.poke(memAddress +543, 3072 & set);
        do Memory.poke(memAddress +575, 6144 & set);
        do Memory.poke(memAddress +607, -4096 & set);
        return;
    }

    method void drawGoUP(bool set) {
        var int memAddress; 
        let memAddress = 16384 + (20 * 32) + (64 / 16);
        // column 0
        do Memory.poke(memAddress +96, -8192 & set);
        do Memory.poke(memAddress +128, 8248 & set);
        do Memory.poke(memAddress +160, 8204 & set);
        do Memory.poke(memAddress +192, 8196 & set);
        do Memory.poke(memAddress +224, 8196 & set);
        do Memory.poke(memAddress +256, 10116 & set);
        do Memory.poke(memAddress +288, 17508 & set);
        do Memory.poke(memAddress +320, -31740 & set);
        do Memory.poke(memAddress +352, 1180 & set);
        do Memory.poke(memAddress +384, 1136 & set);
        do Memory.poke(memAddress +512, -16384 & set);
        do Memory.poke(memAddress +544, 12288 & set);
        do Memory.poke(memAddress +576, 4352 & set);
        do Memory.poke(memAddress +608, 4368 & set);
        do Memory.poke(memAddress +640, -3568 & set);
        do Memory.poke(memAddress +672, 4624 & set);
        do Memory.poke(memAddress +704, 12816 & set);
        do Memory.poke(memAddress +736, 8720 & set);
        do Memory.poke(memAddress +768, 8752 & set);
        do Memory.poke(memAddress +800, 9056 & set);
        do Memory.poke(memAddress +832, 448 & set);
        do Memory.poke(memAddress +864, 1 & set);
        do Memory.poke(memAddress +896, 1 & set);
        do Memory.poke(memAddress +928, 2 & set);
        do Memory.poke(memAddress +960, 4 & set);
        do Memory.poke(memAddress +992, 4 & set);
        do Memory.poke(memAddress +1024, 8 & set);
        do Memory.poke(memAddress +1056, 24 & set);
        do Memory.poke(memAddress +1088, 16 & set);
        do Memory.poke(memAddress +1120, 48 & set);
        do Memory.poke(memAddress +1152, 32 & set);
        do Memory.poke(memAddress +1184, 64 & set);
        do Memory.poke(memAddress +1216, 128 & set);
        do Memory.poke(memAddress +1248, 384 & set);
        do Memory.poke(memAddress +1280, 512 & set);
        do Memory.poke(memAddress +1312, 3072 & set);
        do Memory.poke(memAddress +1344, 6144 & set);
        do Memory.poke(memAddress +1376, 12288 & set);
        do Memory.poke(memAddress +1408, -16384 & set);
        do Memory.poke(memAddress +1440, ~32767 & set);
        // column 1
        do Memory.poke(memAddress +97, 3 & set);
        do Memory.poke(memAddress +129, 2 & set);
        do Memory.poke(memAddress +161, 6 & set);
        do Memory.poke(memAddress +193, 4 & set);
        do Memory.poke(memAddress +225, 12 & set);
        do Memory.poke(memAddress +257, 8 & set);
        do Memory.poke(memAddress +289, 12 & set);
        do Memory.poke(memAddress +321, 5 & set);
        do Memory.poke(memAddress +353, 7 & set);
        do Memory.poke(memAddress +513, 7 & set);
        do Memory.poke(memAddress +545, 4 & set);
        do Memory.poke(memAddress +577, 4 & set);
        do Memory.poke(memAddress +609, 3 & set);
        do Memory.poke(memAddress +641, 1 & set);
        do Memory.poke(memAddress +1409, 0 & set);
        do Memory.poke(memAddress +1441, 1 & set);
        do Memory.poke(memAddress +1473, 3 & set);
        do Memory.poke(memAddress +1505, 2 & set);
        // column -1
        do Memory.poke(memAddress -1, 7168 & set);
        do Memory.poke(memAddress +31, 15360 & set);
        do Memory.poke(memAddress +63, 28160 & set);
        do Memory.poke(memAddress +95, 18944 & set);
        do Memory.poke(memAddress +127, -13568 & set);
        do Memory.poke(memAddress +159, -30464 & set);
        do Memory.poke(memAddress +191, 2304 & set);
        do Memory.poke(memAddress +223, 2048 & set);
        do Memory.poke(memAddress +255, 4096 & set);
        do Memory.poke(memAddress +287, 4096 & set);
        do Memory.poke(memAddress +319, 4096 & set);
        do Memory.poke(memAddress +351, 4096 & set);
        do Memory.poke(memAddress +383, 4096 & set);
        do Memory.poke(memAddress +415, 4096 & set);
        do Memory.poke(memAddress +447, 4096 & set);
        do Memory.poke(memAddress +479, 4096 & set);
        do Memory.poke(memAddress +511, 8192 & set);
        do Memory.poke(memAddress +543, 8192 & set);
        do Memory.poke(memAddress +575, 8192 & set);
        do Memory.poke(memAddress +607, 8192 & set);
        do Memory.poke(memAddress +639, 8192 & set);
        do Memory.poke(memAddress +671, 16384 & set);
        do Memory.poke(memAddress +703, 16384 & set);
        do Memory.poke(memAddress +735, 16384 & set);
        do Memory.poke(memAddress +767, -16384 & set);
        do Memory.poke(memAddress +799, ~32767 & set);
        do Memory.poke(memAddress +831, ~32767 & set);
        return;
    }

    method void drawLv2Text(bool set) {
        var int memAddress; 
        let memAddress = 16384 + (140 * 32) + (0 / 16);
        // column 0
        do Memory.poke(memAddress +608, 256 & set);
        do Memory.poke(memAddress +352, 0 & set);
        do Memory.poke(memAddress +384, 0 & set);
        do Memory.poke(memAddress +416, 0 & set);
        do Memory.poke(memAddress +448, 0 & set);
        do Memory.poke(memAddress +480, 0 & set);
        do Memory.poke(memAddress +512, 0 & set);
        do Memory.poke(memAddress +544, 0 & set);
        do Memory.poke(memAddress +576, 0 & set);
        do Memory.poke(memAddress +640, 256 & set);
        do Memory.poke(memAddress +672, 256 & set);
        do Memory.poke(memAddress +704, 256 & set);
        do Memory.poke(memAddress +736, 256 & set);
        do Memory.poke(memAddress +768, 256 & set);
        do Memory.poke(memAddress +800, 256 & set);
        do Memory.poke(memAddress +832, 768 & set);
        do Memory.poke(memAddress +864, 512 & set);
        do Memory.poke(memAddress +896, 512 & set);
        do Memory.poke(memAddress +928, -32256 & set);
        do Memory.poke(memAddress +960, -6656 & set);
        do Memory.poke(memAddress +992, 15360 & set);
        do Memory.poke(memAddress +1408, 12 & set);
        do Memory.poke(memAddress +1152, 0 & set);
        do Memory.poke(memAddress +1184, 0 & set);
        do Memory.poke(memAddress +1216, 0 & set);
        do Memory.poke(memAddress +1248, 0 & set);
        do Memory.poke(memAddress +1280, 0 & set);
        do Memory.poke(memAddress +1312, 0 & set);
        do Memory.poke(memAddress +1344, 0 & set);
        do Memory.poke(memAddress +1376, 0 & set);
        do Memory.poke(memAddress +1472, 1 & set);
        do Memory.poke(memAddress +1440, 0 & set);
        do Memory.poke(memAddress +1536, ~32767 & set);
        do Memory.poke(memAddress +1504, 0 & set);
        do Memory.poke(memAddress +1568, -16384 & set);
        do Memory.poke(memAddress +1600, 17920 & set);
        do Memory.poke(memAddress +1632, 18176 & set);
        do Memory.poke(memAddress +1664, 18816 & set);
        do Memory.poke(memAddress +1696, 18560 & set);
        do Memory.poke(memAddress +1728, 20608 & set);
        do Memory.poke(memAddress +1760, 20608 & set);
        do Memory.poke(memAddress +1792, 24704 & set);
        do Memory.poke(memAddress +1824, -8064 & set);
        do Memory.poke(memAddress +1856, -16256 & set);
        do Memory.poke(memAddress +1888, -16256 & set);
        do Memory.poke(memAddress +1920, 128 & set);
        do Memory.poke(memAddress +1952, 128 & set);
        // column 1
        do Memory.poke(memAddress +545, 2048 & set);
        do Memory.poke(memAddress +289, 0 & set);
        do Memory.poke(memAddress +321, 0 & set);
        do Memory.poke(memAddress +353, 0 & set);
        do Memory.poke(memAddress +385, 0 & set);
        do Memory.poke(memAddress +417, 0 & set);
        do Memory.poke(memAddress +449, 0 & set);
        do Memory.poke(memAddress +481, 0 & set);
        do Memory.poke(memAddress +513, 0 & set);
        do Memory.poke(memAddress +577, 3968 & set);
        do Memory.poke(memAddress +609, 112 & set);
        do Memory.poke(memAddress +641, 16 & set);
        do Memory.poke(memAddress +673, 16 & set);
        do Memory.poke(memAddress +705, 16 & set);
        do Memory.poke(memAddress +737, 16 & set);
        do Memory.poke(memAddress +769, 48 & set);
        do Memory.poke(memAddress +801, 14368 & set);
        do Memory.poke(memAddress +833, 2016 & set);
        do Memory.poke(memAddress +865, 96 & set);
        do Memory.poke(memAddress +897, 68 & set);
        do Memory.poke(memAddress +929, 71 & set);
        do Memory.poke(memAddress +961, -1920 & set);
        do Memory.poke(memAddress +993, 3968 & set);
        do Memory.poke(memAddress +1441, 32256 & set);
        do Memory.poke(memAddress +1185, 0 & set);
        do Memory.poke(memAddress +1217, 0 & set);
        do Memory.poke(memAddress +1249, 0 & set);
        do Memory.poke(memAddress +1281, 0 & set);
        do Memory.poke(memAddress +1313, 0 & set);
        do Memory.poke(memAddress +1345, 0 & set);
        do Memory.poke(memAddress +1377, 0 & set);
        do Memory.poke(memAddress +1409, 0 & set);
        do Memory.poke(memAddress +1473, 17280 & set);
        do Memory.poke(memAddress +1505, -32640 & set);
        do Memory.poke(memAddress +1537, -32639 & set);
        do Memory.poke(memAddress +1569, -32637 & set);
        do Memory.poke(memAddress +1601, -32638 & set);
        do Memory.poke(memAddress +1633, -32382 & set);
        do Memory.poke(memAddress +1665, 16646 & set);
        do Memory.poke(memAddress +1697, 16644 & set);
        do Memory.poke(memAddress +1729, 25096 & set);
        do Memory.poke(memAddress +1761, 13848 & set);
        do Memory.poke(memAddress +1793, 7184 & set);
        do Memory.poke(memAddress +1825, 16 & set);
        do Memory.poke(memAddress +1857, 0 & set);
        do Memory.poke(memAddress +1889, 0 & set);
        // column 2
        do Memory.poke(memAddress +514, -16384 & set);
        do Memory.poke(memAddress +258, 0 & set);
        do Memory.poke(memAddress +290, 0 & set);
        do Memory.poke(memAddress +322, 0 & set);
        do Memory.poke(memAddress +354, 0 & set);
        do Memory.poke(memAddress +386, 0 & set);
        do Memory.poke(memAddress +418, 0 & set);
        do Memory.poke(memAddress +450, 0 & set);
        do Memory.poke(memAddress +482, 0 & set);
        do Memory.poke(memAddress +546, 16896 & set);
        do Memory.poke(memAddress +578, -15872 & set);
        do Memory.poke(memAddress +610, -32255 & set);
        do Memory.poke(memAddress +642, -32253 & set);
        do Memory.poke(memAddress +674, 514 & set);
        do Memory.poke(memAddress +706, 516 & set);
        do Memory.poke(memAddress +738, 524 & set);
        do Memory.poke(memAddress +770, 536 & set);
        do Memory.poke(memAddress +802, 528 & set);
        do Memory.poke(memAddress +834, 544 & set);
        do Memory.poke(memAddress +866, 576 & set);
        do Memory.poke(memAddress +898, 960 & set);
        do Memory.poke(memAddress +962, 0 & set);
        do Memory.poke(memAddress +930, 0 & set);
        do Memory.poke(memAddress +1250, 1024 & set);
        do Memory.poke(memAddress +994, 0 & set);
        do Memory.poke(memAddress +1026, 0 & set);
        do Memory.poke(memAddress +1058, 0 & set);
        do Memory.poke(memAddress +1090, 0 & set);
        do Memory.poke(memAddress +1122, 0 & set);
        do Memory.poke(memAddress +1154, 0 & set);
        do Memory.poke(memAddress +1186, 0 & set);
        do Memory.poke(memAddress +1218, 0 & set);
        do Memory.poke(memAddress +1282, 3072 & set);
        do Memory.poke(memAddress +1314, 2176 & set);
        do Memory.poke(memAddress +1346, 6272 & set);
        do Memory.poke(memAddress +1378, 4480 & set);
        do Memory.poke(memAddress +1410, 4354 & set);
        do Memory.poke(memAddress +1442, 8454 & set);
        do Memory.poke(memAddress +1474, 8964 & set);
        do Memory.poke(memAddress +1506, 25100 & set);
        do Memory.poke(memAddress +1538, 16920 & set);
        do Memory.poke(memAddress +1570, 16944 & set);
        do Memory.poke(memAddress +1602, 608 & set);
        do Memory.poke(memAddress +1634, 704 & set);
        do Memory.poke(memAddress +1666, 896 & set);
        // column 3
        do Memory.poke(memAddress +419, 2048 & set);
        do Memory.poke(memAddress +163, 0 & set);
        do Memory.poke(memAddress +195, 0 & set);
        do Memory.poke(memAddress +227, 0 & set);
        do Memory.poke(memAddress +259, 0 & set);
        do Memory.poke(memAddress +291, 0 & set);
        do Memory.poke(memAddress +323, 0 & set);
        do Memory.poke(memAddress +355, 0 & set);
        do Memory.poke(memAddress +387, 0 & set);
        do Memory.poke(memAddress +451, 2096 & set);
        do Memory.poke(memAddress +483, 2063 & set);
        do Memory.poke(memAddress +515, 2049 & set);
        do Memory.poke(memAddress +547, 4096 & set);
        do Memory.poke(memAddress +579, 4096 & set);
        do Memory.poke(memAddress +611, 8192 & set);
        do Memory.poke(memAddress +643, 8385 & set);
        do Memory.poke(memAddress +675, 24633 & set);
        do Memory.poke(memAddress +707, 16399 & set);
        do Memory.poke(memAddress +739, -16383 & set);
        do Memory.poke(memAddress +771, -32766 & set);
        do Memory.poke(memAddress +803, 1538 & set);
        do Memory.poke(memAddress +835, 966 & set);
        do Memory.poke(memAddress +867, 60 & set);
        do Memory.poke(memAddress +1155, 512 & set);
        do Memory.poke(memAddress +899, 0 & set);
        do Memory.poke(memAddress +931, 0 & set);
        do Memory.poke(memAddress +963, 0 & set);
        do Memory.poke(memAddress +995, 0 & set);
        do Memory.poke(memAddress +1027, 0 & set);
        do Memory.poke(memAddress +1059, 0 & set);
        do Memory.poke(memAddress +1091, 0 & set);
        do Memory.poke(memAddress +1123, 0 & set);
        do Memory.poke(memAddress +1187, 512 & set);
        do Memory.poke(memAddress +1219, 1550 & set);
        do Memory.poke(memAddress +1251, 1046 & set);
        do Memory.poke(memAddress +1283, 1076 & set);
        do Memory.poke(memAddress +1315, 3108 & set);
        do Memory.poke(memAddress +1347, 2148 & set);
        do Memory.poke(memAddress +1379, 6340 & set);
        do Memory.poke(memAddress +1411, 4356 & set);
        do Memory.poke(memAddress +1443, 4872 & set);
        do Memory.poke(memAddress +1475, 5640 & set);
        do Memory.poke(memAddress +1507, 7176 & set);
        do Memory.poke(memAddress +1539, 8 & set);
        do Memory.poke(memAddress +1571, 8 & set);
        // column 4
        do Memory.poke(memAddress +260, -16384 & set);
        do Memory.poke(memAddress +132, 0 & set);
        do Memory.poke(memAddress +164, 0 & set);
        do Memory.poke(memAddress +196, 0 & set);
        do Memory.poke(memAddress +228, 0 & set);
        do Memory.poke(memAddress +292, 24576 & set);
        do Memory.poke(memAddress +324, 6144 & set);
        do Memory.poke(memAddress +356, 2048 & set);
        do Memory.poke(memAddress +388, 2048 & set);
        do Memory.poke(memAddress +516, ~32767 & set);
        do Memory.poke(memAddress +420, 0 & set);
        do Memory.poke(memAddress +452, 0 & set);
        do Memory.poke(memAddress +484, 0 & set);
        do Memory.poke(memAddress +548, ~32767 & set);
        do Memory.poke(memAddress +580, -16384 & set);
        do Memory.poke(memAddress +612, 16384 & set);
        do Memory.poke(memAddress +644, -8192 & set);
        do Memory.poke(memAddress +676, 24576 & set);
        do Memory.poke(memAddress +708, 192 & set);
        do Memory.poke(memAddress +740, 120 & set);
        do Memory.poke(memAddress +772, 15 & set);
        do Memory.poke(memAddress +996, 24576 & set);
        do Memory.poke(memAddress +804, 0 & set);
        do Memory.poke(memAddress +836, 0 & set);
        do Memory.poke(memAddress +868, 0 & set);
        do Memory.poke(memAddress +900, 0 & set);
        do Memory.poke(memAddress +932, 0 & set);
        do Memory.poke(memAddress +964, 0 & set);
        do Memory.poke(memAddress +1028, 22528 & set);
        do Memory.poke(memAddress +1060, -14336 & set);
        do Memory.poke(memAddress +1092, -30720 & set);
        do Memory.poke(memAddress +1124, -26621 & set);
        do Memory.poke(memAddress +1156, -28671 & set);
        do Memory.poke(memAddress +1188, -4095 & set);
        do Memory.poke(memAddress +1220, 24577 & set);
        do Memory.poke(memAddress +1252, 8289 & set);
        do Memory.poke(memAddress +1284, 16497 & set);
        do Memory.poke(memAddress +1316, -16307 & set);
        do Memory.poke(memAddress +1348, 65 & set);
        do Memory.poke(memAddress +1380, 97 & set);
        do Memory.poke(memAddress +1412, 182 & set);
        do Memory.poke(memAddress +1444, 28 & set);
        do Memory.poke(memAddress +1604, ~32767 & set);
        do Memory.poke(memAddress +1476, 0 & set);
        do Memory.poke(memAddress +1508, 0 & set);
        do Memory.poke(memAddress +1540, 0 & set);
        do Memory.poke(memAddress +1572, 0 & set);
        do Memory.poke(memAddress +1636, 24576 & set);
        do Memory.poke(memAddress +1668, 12288 & set);
        do Memory.poke(memAddress +1700, 2048 & set);
        do Memory.poke(memAddress +1732, 1024 & set);
        do Memory.poke(memAddress +1764, 512 & set);
        do Memory.poke(memAddress +1796, 768 & set);
        do Memory.poke(memAddress +1828, 128 & set);
        do Memory.poke(memAddress +1860, 64 & set);
        do Memory.poke(memAddress +1892, 64 & set);
        do Memory.poke(memAddress +1924, 64 & set);
        // column 5
        do Memory.poke(memAddress +261, 15 & set);
        do Memory.poke(memAddress +133, 0 & set);
        do Memory.poke(memAddress +165, 0 & set);
        do Memory.poke(memAddress +197, 0 & set);
        do Memory.poke(memAddress +229, 0 & set);
        do Memory.poke(memAddress +293, 8 & set);
        do Memory.poke(memAddress +325, 8 & set);
        do Memory.poke(memAddress +357, 4 & set);
        do Memory.poke(memAddress +389, 6 & set);
        do Memory.poke(memAddress +421, 2 & set);
        do Memory.poke(memAddress +453, 3 & set);
        do Memory.poke(memAddress +485, 1 & set);
        do Memory.poke(memAddress +517, 1 & set);
        do Memory.poke(memAddress +549, 0 & set);
        do Memory.poke(memAddress +581, 504 & set);
        do Memory.poke(memAddress +613, 7 & set);
        do Memory.poke(memAddress +645, 0 & set);
        do Memory.poke(memAddress +869, -8192 & set);
        do Memory.poke(memAddress +677, 0 & set);
        do Memory.poke(memAddress +709, 0 & set);
        do Memory.poke(memAddress +741, 0 & set);
        do Memory.poke(memAddress +773, 0 & set);
        do Memory.poke(memAddress +805, 0 & set);
        do Memory.poke(memAddress +837, 0 & set);
        do Memory.poke(memAddress +901, 14336 & set);
        do Memory.poke(memAddress +933, 2048 & set);
        do Memory.poke(memAddress +965, 2080 & set);
        do Memory.poke(memAddress +997, 4128 & set);
        do Memory.poke(memAddress +1029, 12320 & set);
        do Memory.poke(memAddress +1061, 8224 & set);
        do Memory.poke(memAddress +1093, 24672 & set);
        do Memory.poke(memAddress +1125, -16305 & set);
        do Memory.poke(memAddress +1157, 200 & set);
        do Memory.poke(memAddress +1189, 24968 & set);
        do Memory.poke(memAddress +1221, 13064 & set);
        do Memory.poke(memAddress +1253, 3592 & set);
        do Memory.poke(memAddress +1285, 12 & set);
        do Memory.poke(memAddress +1317, 7 & set);
        do Memory.poke(memAddress +1477, -16384 & set);
        do Memory.poke(memAddress +1349, 0 & set);
        do Memory.poke(memAddress +1381, 0 & set);
        do Memory.poke(memAddress +1413, 0 & set);
        do Memory.poke(memAddress +1445, 0 & set);
        do Memory.poke(memAddress +1509, 28672 & set);
        do Memory.poke(memAddress +1541, 6144 & set);
        do Memory.poke(memAddress +1573, 1534 & set);
        do Memory.poke(memAddress +1605, 1795 & set);
        do Memory.poke(memAddress +1637, 1280 & set);
        do Memory.poke(memAddress +1669, 1152 & set);
        do Memory.poke(memAddress +1701, 1152 & set);
        do Memory.poke(memAddress +1733, 1920 & set);
        do Memory.poke(memAddress +1765, 768 & set);
        // column 6
        do Memory.poke(memAddress +678, 16384 & set);
        do Memory.poke(memAddress +422, 0 & set);
        do Memory.poke(memAddress +454, 0 & set);
        do Memory.poke(memAddress +486, 0 & set);
        do Memory.poke(memAddress +518, 0 & set);
        do Memory.poke(memAddress +550, 0 & set);
        do Memory.poke(memAddress +582, 0 & set);
        do Memory.poke(memAddress +614, 0 & set);
        do Memory.poke(memAddress +646, 0 & set);
        do Memory.poke(memAddress +710, 17920 & set);
        do Memory.poke(memAddress +742, 17152 & set);
        do Memory.poke(memAddress +774, -32384 & set);
        do Memory.poke(memAddress +806, 128 & set);
        do Memory.poke(memAddress +838, 128 & set);
        do Memory.poke(memAddress +870, 131 & set);
        do Memory.poke(memAddress +902, 134 & set);
        do Memory.poke(memAddress +934, 136 & set);
        do Memory.poke(memAddress +966, 152 & set);
        do Memory.poke(memAddress +998, 24976 & set);
        do Memory.poke(memAddress +1030, 14608 & set);
        do Memory.poke(memAddress +1062, 3592 & set);
        do Memory.poke(memAddress +1094, 8 & set);
        do Memory.poke(memAddress +1126, 15 & set);
        do Memory.poke(memAddress +1254, 6144 & set);
        do Memory.poke(memAddress +1158, 0 & set);
        do Memory.poke(memAddress +1190, 0 & set);
        do Memory.poke(memAddress +1222, 0 & set);
        do Memory.poke(memAddress +1286, 28672 & set);
        do Memory.poke(memAddress +1318, -16384 & set);
        do Memory.poke(memAddress +1350, -1024 & set);
        do Memory.poke(memAddress +1382, -15392 & set);
        do Memory.poke(memAddress +1414, 24632 & set);
        do Memory.poke(memAddress +1446, 12302 & set);
        do Memory.poke(memAddress +1478, 1 & set);
        // column 7
        do Memory.poke(memAddress +455, 256 & set);
        do Memory.poke(memAddress +199, 0 & set);
        do Memory.poke(memAddress +231, 0 & set);
        do Memory.poke(memAddress +263, 0 & set);
        do Memory.poke(memAddress +295, 0 & set);
        do Memory.poke(memAddress +327, 0 & set);
        do Memory.poke(memAddress +359, 0 & set);
        do Memory.poke(memAddress +391, 0 & set);
        do Memory.poke(memAddress +423, 0 & set);
        do Memory.poke(memAddress +487, 320 & set);
        do Memory.poke(memAddress +519, 320 & set);
        do Memory.poke(memAddress +551, 64 & set);
        do Memory.poke(memAddress +615, 16 & set);
        do Memory.poke(memAddress +583, 0 & set);
        do Memory.poke(memAddress +647, 24 & set);
        do Memory.poke(memAddress +679, 8 & set);
        do Memory.poke(memAddress +711, 12 & set);
        do Memory.poke(memAddress +743, 6 & set);
        do Memory.poke(memAddress +775, 2 & set);
        do Memory.poke(memAddress +807, 511 & set);
        do Memory.poke(memAddress +839, 769 & set);
        do Memory.poke(memAddress +871, 2 & set);
        do Memory.poke(memAddress +903, 6 & set);
        do Memory.poke(memAddress +935, 4 & set);
        do Memory.poke(memAddress +1319, 0 & set);
        do Memory.poke(memAddress +1063, 0 & set);
        do Memory.poke(memAddress +1095, 0 & set);
        do Memory.poke(memAddress +1127, 0 & set);
        do Memory.poke(memAddress +1159, 0 & set);
        do Memory.poke(memAddress +1191, 0 & set);
        do Memory.poke(memAddress +1223, 0 & set);
        do Memory.poke(memAddress +1255, 0 & set);
        do Memory.poke(memAddress +1287, 0 & set);
        do Memory.poke(memAddress +1351, 0 & set);
        do Memory.poke(memAddress +1383, 0 & set);
        // column -1
        do Memory.poke(memAddress +1471, ~32767 & set);
        do Memory.poke(memAddress +1215, 0 & set);
        do Memory.poke(memAddress +1247, 0 & set);
        do Memory.poke(memAddress +1279, 0 & set);
        do Memory.poke(memAddress +1311, 0 & set);
        do Memory.poke(memAddress +1343, 0 & set);
        do Memory.poke(memAddress +1375, 0 & set);
        do Memory.poke(memAddress +1407, 0 & set);
        do Memory.poke(memAddress +1439, 0 & set);
        return;
    }

    method void drawWatchOut(bool set) {
        var int memAddress; 
        let memAddress = 16384 + (160 * 32) + (240 / 16);
        // column 0
        do Memory.poke(memAddress +640, -16384 & set);
        do Memory.poke(memAddress +384, 0 & set);
        do Memory.poke(memAddress +416, 0 & set);
        do Memory.poke(memAddress +448, 0 & set);
        do Memory.poke(memAddress +480, 0 & set);
        do Memory.poke(memAddress +512, 0 & set);
        do Memory.poke(memAddress +544, 0 & set);
        do Memory.poke(memAddress +576, 0 & set);
        do Memory.poke(memAddress +608, 0 & set);
        do Memory.poke(memAddress +672, 8192 & set);
        do Memory.poke(memAddress +704, 8192 & set);
        do Memory.poke(memAddress +736, 4096 & set);
        do Memory.poke(memAddress +768, 2048 & set);
        do Memory.poke(memAddress +800, 1024 & set);
        do Memory.poke(memAddress +832, 1024 & set);
        do Memory.poke(memAddress +864, 512 & set);
        do Memory.poke(memAddress +896, 512 & set);
        do Memory.poke(memAddress +928, 512 & set);
        do Memory.poke(memAddress +960, 960 & set);
        do Memory.poke(memAddress +992, 15968 & set);
        do Memory.poke(memAddress +1024, -15840 & set);
        do Memory.poke(memAddress +1056, -32240 & set);
        do Memory.poke(memAddress +1088, -15848 & set);
        do Memory.poke(memAddress +1120, 26120 & set);
        do Memory.poke(memAddress +1152, 15372 & set);
        do Memory.poke(memAddress +1184, 4 & set);
        do Memory.poke(memAddress +1216, 4 & set);
        do Memory.poke(memAddress +1248, 2 & set);
        do Memory.poke(memAddress +1280, 2 & set);
        do Memory.poke(memAddress +1312, 2 & set);
        do Memory.poke(memAddress +1344, 2 & set);
        do Memory.poke(memAddress +1376, 2 & set);
        do Memory.poke(memAddress +1408, 2 & set);
        do Memory.poke(memAddress +1440, 2 & set);
        do Memory.poke(memAddress +1472, 2 & set);
        do Memory.poke(memAddress +1504, 2 & set);
        do Memory.poke(memAddress +1536, 2 & set);
        do Memory.poke(memAddress +1568, 2 & set);
        do Memory.poke(memAddress +1600, 2 & set);
        do Memory.poke(memAddress +1632, 2 & set);
        do Memory.poke(memAddress +1664, 6 & set);
        do Memory.poke(memAddress +1696, 4 & set);
        do Memory.poke(memAddress +1728, 4 & set);
        do Memory.poke(memAddress +1760, 8 & set);
        do Memory.poke(memAddress +1792, 8 & set);
        do Memory.poke(memAddress +1824, 1040 & set);
        do Memory.poke(memAddress +1856, 1056 & set);
        do Memory.poke(memAddress +1888, 1120 & set);
        do Memory.poke(memAddress +1920, 1088 & set);
        do Memory.poke(memAddress +1952, 1664 & set);
        do Memory.poke(memAddress +1984, 911 & set);
        do Memory.poke(memAddress +2016, 1008 & set);
        do Memory.poke(memAddress +2048, 960 & set);
        // column 1
        do Memory.poke(memAddress +609, 1022 & set);
        do Memory.poke(memAddress +353, 0 & set);
        do Memory.poke(memAddress +385, 0 & set);
        do Memory.poke(memAddress +417, 0 & set);
        do Memory.poke(memAddress +449, 0 & set);
        do Memory.poke(memAddress +481, 0 & set);
        do Memory.poke(memAddress +513, 0 & set);
        do Memory.poke(memAddress +545, 0 & set);
        do Memory.poke(memAddress +577, 0 & set);
        do Memory.poke(memAddress +641, 1 & set);
        do Memory.poke(memAddress +1025, 0 & set);
        do Memory.poke(memAddress +769, 0 & set);
        do Memory.poke(memAddress +801, 0 & set);
        do Memory.poke(memAddress +833, 0 & set);
        do Memory.poke(memAddress +865, 0 & set);
        do Memory.poke(memAddress +897, 0 & set);
        do Memory.poke(memAddress +929, 0 & set);
        do Memory.poke(memAddress +961, 0 & set);
        do Memory.poke(memAddress +993, 0 & set);
        do Memory.poke(memAddress +1057, 0 & set);
        do Memory.poke(memAddress +1089, 0 & set);
        // column 2
        // column 3
        // column 4
        do Memory.poke(memAddress +356, 8192 & set);
        do Memory.poke(memAddress +132, 0 & set);
        do Memory.poke(memAddress +164, 0 & set);
        do Memory.poke(memAddress +196, 0 & set);
        do Memory.poke(memAddress +228, 0 & set);
        do Memory.poke(memAddress +260, 0 & set);
        do Memory.poke(memAddress +292, 0 & set);
        do Memory.poke(memAddress +324, 0 & set);
        do Memory.poke(memAddress +388, 8192 & set);
        do Memory.poke(memAddress +420, 8192 & set);
        do Memory.poke(memAddress +452, 8192 & set);
        do Memory.poke(memAddress +484, 8192 & set);
        do Memory.poke(memAddress +516, 16384 & set);
        do Memory.poke(memAddress +548, 16384 & set);
        do Memory.poke(memAddress +580, 16384 & set);
        do Memory.poke(memAddress +612, 16384 & set);
        do Memory.poke(memAddress +644, ~32767 & set);
        do Memory.poke(memAddress +676, ~32767 & set);
        // column 5
        do Memory.poke(memAddress +357, 8 & set);
        do Memory.poke(memAddress +133, 0 & set);
        do Memory.poke(memAddress +165, 0 & set);
        do Memory.poke(memAddress +197, 0 & set);
        do Memory.poke(memAddress +229, 0 & set);
        do Memory.poke(memAddress +261, 0 & set);
        do Memory.poke(memAddress +293, 0 & set);
        do Memory.poke(memAddress +325, 0 & set);
        do Memory.poke(memAddress +389, 520 & set);
        do Memory.poke(memAddress +421, 1544 & set);
        do Memory.poke(memAddress +453, 1032 & set);
        do Memory.poke(memAddress +485, 1032 & set);
        do Memory.poke(memAddress +517, 1032 & set);
        do Memory.poke(memAddress +549, 1032 & set);
        do Memory.poke(memAddress +581, 520 & set);
        do Memory.poke(memAddress +613, 536 & set);
        do Memory.poke(memAddress +645, 516 & set);
        do Memory.poke(memAddress +677, 549 & set);
        do Memory.poke(memAddress +709, 615 & set);
        do Memory.poke(memAddress +741, 960 & set);
        do Memory.poke(memAddress +773, 384 & set);
        // column 6
        do Memory.poke(memAddress +422, ~32767 & set);
        do Memory.poke(memAddress +166, 0 & set);
        do Memory.poke(memAddress +198, 0 & set);
        do Memory.poke(memAddress +230, 0 & set);
        do Memory.poke(memAddress +262, 0 & set);
        do Memory.poke(memAddress +294, 0 & set);
        do Memory.poke(memAddress +326, 0 & set);
        do Memory.poke(memAddress +358, 0 & set);
        do Memory.poke(memAddress +390, 0 & set);
        do Memory.poke(memAddress +454, ~32767 & set);
        do Memory.poke(memAddress +486, ~32767 & set);
        do Memory.poke(memAddress +518, -2018 & set);
        do Memory.poke(memAddress +550, -32734 & set);
        do Memory.poke(memAddress +582, -32733 & set);
        do Memory.poke(memAddress +614, -32703 & set);
        do Memory.poke(memAddress +646, 193 & set);
        do Memory.poke(memAddress +678, 961 & set);
        do Memory.poke(memAddress +710, 1585 & set);
        do Memory.poke(memAddress +742, 31 & set);
        // column 7
        do Memory.poke(memAddress +263, ~32767 & set);
        do Memory.poke(memAddress +135, 0 & set);
        do Memory.poke(memAddress +167, 0 & set);
        do Memory.poke(memAddress +199, 0 & set);
        do Memory.poke(memAddress +231, 0 & set);
        do Memory.poke(memAddress +295, ~32767 & set);
        do Memory.poke(memAddress +327, ~32767 & set);
        do Memory.poke(memAddress +423, 0 & set);
        do Memory.poke(memAddress +359, 0 & set);
        do Memory.poke(memAddress +391, 0 & set);
        do Memory.poke(memAddress +455, 0 & set);
        do Memory.poke(memAddress +487, 15360 & set);
        do Memory.poke(memAddress +519, 1795 & set);
        do Memory.poke(memAddress +551, 256 & set);
        do Memory.poke(memAddress +583, 256 & set);
        do Memory.poke(memAddress +615, 257 & set);
        do Memory.poke(memAddress +647, 785 & set);
        do Memory.poke(memAddress +679, -32225 & set);
        do Memory.poke(memAddress +711, -512 & set);
        do Memory.poke(memAddress +1671, ~32767 & set);
        do Memory.poke(memAddress +1415, 0 & set);
        do Memory.poke(memAddress +1447, 0 & set);
        do Memory.poke(memAddress +1479, 0 & set);
        do Memory.poke(memAddress +1511, 0 & set);
        do Memory.poke(memAddress +1543, 0 & set);
        do Memory.poke(memAddress +1575, 0 & set);
        do Memory.poke(memAddress +1607, 0 & set);
        do Memory.poke(memAddress +1639, 0 & set);
        do Memory.poke(memAddress +1703, -2048 & set);
        do Memory.poke(memAddress +1735, 18432 & set);
        do Memory.poke(memAddress +1767, 30720 & set);
        do Memory.poke(memAddress +1799, 16384 & set);
        do Memory.poke(memAddress +1831, 16384 & set);
        do Memory.poke(memAddress +1863, 16384 & set);
        do Memory.poke(memAddress +1895, 8192 & set);
        do Memory.poke(memAddress +1927, 8192 & set);
        do Memory.poke(memAddress +1959, 8192 & set);
        do Memory.poke(memAddress +1991, 4096 & set);
        do Memory.poke(memAddress +2023, 4608 & set);
        do Memory.poke(memAddress +2055, 6656 & set);
        do Memory.poke(memAddress +2087, 18944 & set);
        do Memory.poke(memAddress +2119, 31232 & set);
        do Memory.poke(memAddress +2151, 7680 & set);
        do Memory.poke(memAddress +2183, 1536 & set);
        // column 8
        do Memory.poke(memAddress +264, 0 & set);
        do Memory.poke(memAddress +136, 0 & set);
        do Memory.poke(memAddress +168, 0 & set);
        do Memory.poke(memAddress +200, 0 & set);
        do Memory.poke(memAddress +232, 0 & set);
        do Memory.poke(memAddress +296, 0 & set);
        do Memory.poke(memAddress +328, 0 & set);
        do Memory.poke(memAddress +360, 1 & set);
        do Memory.poke(memAddress +392, 1 & set);
        do Memory.poke(memAddress +424, 2 & set);
        do Memory.poke(memAddress +456, 962 & set);
        do Memory.poke(memAddress +488, 610 & set);
        do Memory.poke(memAddress +520, 1590 & set);
        do Memory.poke(memAddress +552, 1044 & set);
        do Memory.poke(memAddress +584, 1036 & set);
        do Memory.poke(memAddress +616, 3084 & set);
        do Memory.poke(memAddress +648, 2056 & set);
        do Memory.poke(memAddress +680, 8 & set);
        do Memory.poke(memAddress +712, 0 & set);
        do Memory.poke(memAddress +840, 4096 & set);
        do Memory.poke(memAddress +744, 0 & set);
        do Memory.poke(memAddress +776, 0 & set);
        do Memory.poke(memAddress +808, 0 & set);
        do Memory.poke(memAddress +872, 4096 & set);
        do Memory.poke(memAddress +904, 4222 & set);
        do Memory.poke(memAddress +936, 4290 & set);
        do Memory.poke(memAddress +968, 4482 & set);
        do Memory.poke(memAddress +1000, 12546 & set);
        do Memory.poke(memAddress +1032, 8582 & set);
        do Memory.poke(memAddress +1064, 24828 & set);
        do Memory.poke(memAddress +1096, -16384 & set);
        do Memory.poke(memAddress +1416, 2 & set);
        do Memory.poke(memAddress +1160, 0 & set);
        do Memory.poke(memAddress +1192, 0 & set);
        do Memory.poke(memAddress +1224, 0 & set);
        do Memory.poke(memAddress +1256, 0 & set);
        do Memory.poke(memAddress +1288, 0 & set);
        do Memory.poke(memAddress +1320, 0 & set);
        do Memory.poke(memAddress +1352, 0 & set);
        do Memory.poke(memAddress +1384, 0 & set);
        do Memory.poke(memAddress +1448, 2 & set);
        do Memory.poke(memAddress +1480, 2 & set);
        do Memory.poke(memAddress +1512, 2 & set);
        do Memory.poke(memAddress +1544, 2 & set);
        do Memory.poke(memAddress +1576, 2 & set);
        do Memory.poke(memAddress +1608, 3 & set);
        do Memory.poke(memAddress +1640, 1 & set);
        do Memory.poke(memAddress +1672, 0 & set);
        do Memory.poke(memAddress +1704, 0 & set);
        // column 9
        do Memory.poke(memAddress +713, 1024 & set);
        do Memory.poke(memAddress +457, 0 & set);
        do Memory.poke(memAddress +489, 0 & set);
        do Memory.poke(memAddress +521, 0 & set);
        do Memory.poke(memAddress +553, 0 & set);
        do Memory.poke(memAddress +585, 0 & set);
        do Memory.poke(memAddress +617, 0 & set);
        do Memory.poke(memAddress +649, 0 & set);
        do Memory.poke(memAddress +681, 0 & set);
        do Memory.poke(memAddress +745, 1024 & set);
        do Memory.poke(memAddress +777, 1024 & set);
        do Memory.poke(memAddress +809, 19456 & set);
        do Memory.poke(memAddress +841, 31744 & set);
        do Memory.poke(memAddress +873, 4036 & set);
        do Memory.poke(memAddress +905, 6148 & set);
        do Memory.poke(memAddress +937, 4100 & set);
        do Memory.poke(memAddress +969, 8196 & set);
        do Memory.poke(memAddress +1001, -8180 & set);
        do Memory.poke(memAddress +1033, 28 & set);
        do Memory.poke(memAddress +1065, 99 & set);
        do Memory.poke(memAddress +1097, 1 & set);
        do Memory.poke(memAddress +1353, 8192 & set);
        do Memory.poke(memAddress +1129, 0 & set);
        do Memory.poke(memAddress +1161, 0 & set);
        do Memory.poke(memAddress +1193, 0 & set);
        do Memory.poke(memAddress +1225, 0 & set);
        do Memory.poke(memAddress +1257, 0 & set);
        do Memory.poke(memAddress +1289, 0 & set);
        do Memory.poke(memAddress +1321, 0 & set);
        do Memory.poke(memAddress +1385, 8192 & set);
        do Memory.poke(memAddress +1417, 8192 & set);
        do Memory.poke(memAddress +1449, 8192 & set);
        do Memory.poke(memAddress +1481, 8192 & set);
        do Memory.poke(memAddress +1513, 24576 & set);
        do Memory.poke(memAddress +1545, 16384 & set);
        do Memory.poke(memAddress +1577, 16384 & set);
        do Memory.poke(memAddress +1609, 16384 & set);
        do Memory.poke(memAddress +1641, -16384 & set);
        do Memory.poke(memAddress +1673, ~32767 & set);
        do Memory.poke(memAddress +1705, ~32767 & set);
        // column 10
        do Memory.poke(memAddress +554, 448 & set);
        do Memory.poke(memAddress +298, 0 & set);
        do Memory.poke(memAddress +330, 0 & set);
        do Memory.poke(memAddress +362, 0 & set);
        do Memory.poke(memAddress +394, 0 & set);
        do Memory.poke(memAddress +426, 0 & set);
        do Memory.poke(memAddress +458, 0 & set);
        do Memory.poke(memAddress +490, 0 & set);
        do Memory.poke(memAddress +522, 0 & set);
        do Memory.poke(memAddress +586, 496 & set);
        do Memory.poke(memAddress +618, 496 & set);
        do Memory.poke(memAddress +650, 496 & set);
        do Memory.poke(memAddress +682, 496 & set);
        do Memory.poke(memAddress +714, 480 & set);
        do Memory.poke(memAddress +746, 480 & set);
        do Memory.poke(memAddress +778, 480 & set);
        do Memory.poke(memAddress +810, 960 & set);
        do Memory.poke(memAddress +842, 960 & set);
        do Memory.poke(memAddress +874, 960 & set);
        do Memory.poke(memAddress +970, 2 & set);
        do Memory.poke(memAddress +906, 0 & set);
        do Memory.poke(memAddress +938, 0 & set);
        do Memory.poke(memAddress +1002, 1923 & set);
        do Memory.poke(memAddress +1034, 1920 & set);
        do Memory.poke(memAddress +1066, 1792 & set);
        do Memory.poke(memAddress +1610, 14 & set);
        do Memory.poke(memAddress +1354, 0 & set);
        do Memory.poke(memAddress +1386, 0 & set);
        do Memory.poke(memAddress +1418, 0 & set);
        do Memory.poke(memAddress +1450, 0 & set);
        do Memory.poke(memAddress +1482, 0 & set);
        do Memory.poke(memAddress +1514, 0 & set);
        do Memory.poke(memAddress +1546, 0 & set);
        do Memory.poke(memAddress +1578, 0 & set);
        do Memory.poke(memAddress +1642, 27 & set);
        do Memory.poke(memAddress +1674, 17 & set);
        do Memory.poke(memAddress +1706, 17 & set);
        do Memory.poke(memAddress +1738, 15 & set);
        do Memory.poke(memAddress +1770, 1 & set);
        do Memory.poke(memAddress +1802, 1 & set);
        do Memory.poke(memAddress +1834, 1 & set);
        do Memory.poke(memAddress +1866, 3 & set);
        do Memory.poke(memAddress +1898, 2 & set);
        do Memory.poke(memAddress +1930, 6 & set);
        do Memory.poke(memAddress +1962, 2060 & set);
        do Memory.poke(memAddress +1994, 2104 & set);
        do Memory.poke(memAddress +2026, 4320 & set);
        do Memory.poke(memAddress +2058, 32640 & set);
        do Memory.poke(memAddress +2090, 30720 & set);
        do Memory.poke(memAddress +2122, 6144 & set);
        do Memory.poke(memAddress +2154, 3584 & set);
        // column -1
        do Memory.poke(memAddress +1983, ~32767 & set);
        do Memory.poke(memAddress +1727, 0 & set);
        do Memory.poke(memAddress +1759, 0 & set);
        do Memory.poke(memAddress +1791, 0 & set);
        do Memory.poke(memAddress +1823, 0 & set);
        do Memory.poke(memAddress +1855, 0 & set);
        do Memory.poke(memAddress +1887, 0 & set);
        do Memory.poke(memAddress +1919, 0 & set);
        do Memory.poke(memAddress +1951, 0 & set);
        return;
    }

    method void drawMerry(bool set) {
        var int memAddress; 
        let memAddress = 16384 + (10 * 32) + (192 / 16);
        // column 0
        do Memory.poke(memAddress +736, ~32767 & set);
        do Memory.poke(memAddress +352, 0 & set);
        do Memory.poke(memAddress +384, 0 & set);
        do Memory.poke(memAddress +416, 0 & set);
        do Memory.poke(memAddress +448, 0 & set);
        do Memory.poke(memAddress +480, 0 & set);
        do Memory.poke(memAddress +512, 0 & set);
        do Memory.poke(memAddress +544, 0 & set);
        do Memory.poke(memAddress +576, 0 & set);
        do Memory.poke(memAddress +608, 0 & set);
        do Memory.poke(memAddress +640, 0 & set);
        do Memory.poke(memAddress +672, 0 & set);
        do Memory.poke(memAddress +704, 0 & set);
        do Memory.poke(memAddress +768, 28673 & set);
        do Memory.poke(memAddress +800, 8419 & set);
        do Memory.poke(memAddress +832, 8482 & set);
        do Memory.poke(memAddress +864, 8740 & set);
        do Memory.poke(memAddress +896, 9248 & set);
        do Memory.poke(memAddress +928, -7128 & set);
        do Memory.poke(memAddress +960, 25648 & set);
        do Memory.poke(memAddress +992, 18464 & set);
        do Memory.poke(memAddress +1024, 18528 & set);
        do Memory.poke(memAddress +1056, 18528 & set);
        do Memory.poke(memAddress +1088, -30656 & set);
        do Memory.poke(memAddress +1120, -28608 & set);
        do Memory.poke(memAddress +1152, 4097 & set);
        do Memory.poke(memAddress +1184, 4097 & set);
        do Memory.poke(memAddress +1216, 1 & set);
        // column 1
        do Memory.poke(memAddress +577, 7168 & set);
        do Memory.poke(memAddress +321, 0 & set);
        do Memory.poke(memAddress +353, 0 & set);
        do Memory.poke(memAddress +385, 0 & set);
        do Memory.poke(memAddress +417, 0 & set);
        do Memory.poke(memAddress +449, 0 & set);
        do Memory.poke(memAddress +481, 0 & set);
        do Memory.poke(memAddress +513, 0 & set);
        do Memory.poke(memAddress +545, 0 & set);
        do Memory.poke(memAddress +609, 30464 & set);
        do Memory.poke(memAddress +641, 16768 & set);
        do Memory.poke(memAddress +673, 16576 & set);
        do Memory.poke(memAddress +705, 16456 & set);
        do Memory.poke(memAddress +737, 16455 & set);
        do Memory.poke(memAddress +769, 8256 & set);
        do Memory.poke(memAddress +801, 8256 & set);
        do Memory.poke(memAddress +833, 4288 & set);
        do Memory.poke(memAddress +865, 6272 & set);
        do Memory.poke(memAddress +897, 3968 & set);
        do Memory.poke(memAddress +929, 3999 & set);
        do Memory.poke(memAddress +961, 30848 & set);
        do Memory.poke(memAddress +993, -16256 & set);
        do Memory.poke(memAddress +1025, 128 & set);
        do Memory.poke(memAddress +1057, 384 & set);
        do Memory.poke(memAddress +1089, 352 & set);
        do Memory.poke(memAddress +1121, 63 & set);
        // column 2
        do Memory.poke(memAddress +482, 6624 & set);
        do Memory.poke(memAddress +322, 0 & set);
        do Memory.poke(memAddress +354, 0 & set);
        do Memory.poke(memAddress +386, 0 & set);
        do Memory.poke(memAddress +418, 0 & set);
        do Memory.poke(memAddress +450, 0 & set);
        do Memory.poke(memAddress +514, 8760 & set);
        do Memory.poke(memAddress +546, -15354 & set);
        do Memory.poke(memAddress +578, 1026 & set);
        do Memory.poke(memAddress +610, 1537 & set);
        do Memory.poke(memAddress +642, 769 & set);
        do Memory.poke(memAddress +674, 65 & set);
        do Memory.poke(memAddress +706, 35 & set);
        do Memory.poke(memAddress +738, 26 & set);
        do Memory.poke(memAddress +770, 14 & set);
        do Memory.poke(memAddress +802, 30 & set);
        do Memory.poke(memAddress +834, 102 & set);
        do Memory.poke(memAddress +866, 388 & set);
        do Memory.poke(memAddress +898, 1540 & set);
        do Memory.poke(memAddress +930, 3076 & set);
        do Memory.poke(memAddress +962, 2052 & set);
        do Memory.poke(memAddress +994, 5 & set);
        do Memory.poke(memAddress +1026, 6 & set);
        do Memory.poke(memAddress +1058, 8 & set);
        // column 3
        do Memory.poke(memAddress +387, 32 & set);
        do Memory.poke(memAddress +323, 0 & set);
        do Memory.poke(memAddress +355, 0 & set);
        do Memory.poke(memAddress +419, 32 & set);
        do Memory.poke(memAddress +451, 32 & set);
        do Memory.poke(memAddress +483, 32 & set);
        do Memory.poke(memAddress +515, 48 & set);
        do Memory.poke(memAddress +547, 17 & set);
        do Memory.poke(memAddress +579, 19 & set);
        do Memory.poke(memAddress +611, 30 & set);
        do Memory.poke(memAddress +643, 12 & set);
        do Memory.poke(memAddress +675, 8 & set);
        do Memory.poke(memAddress +707, 8 & set);
        do Memory.poke(memAddress +739, 8 & set);
        do Memory.poke(memAddress +771, 8 & set);
        do Memory.poke(memAddress +803, 16 & set);
        do Memory.poke(memAddress +835, 16 & set);
        do Memory.poke(memAddress +867, 16 & set);
        do Memory.poke(memAddress +899, 16 & set);
        do Memory.poke(memAddress +931, 48 & set);
        do Memory.poke(memAddress +963, 32 & set);
        // column -1
        do Memory.poke(memAddress +767, ~32767 & set);
        do Memory.poke(memAddress +383, 0 & set);
        do Memory.poke(memAddress +415, 0 & set);
        do Memory.poke(memAddress +447, 0 & set);
        do Memory.poke(memAddress +479, 0 & set);
        do Memory.poke(memAddress +511, 0 & set);
        do Memory.poke(memAddress +543, 0 & set);
        do Memory.poke(memAddress +575, 0 & set);
        do Memory.poke(memAddress +607, 0 & set);
        do Memory.poke(memAddress +639, 0 & set);
        do Memory.poke(memAddress +671, 0 & set);
        do Memory.poke(memAddress +703, 0 & set);
        do Memory.poke(memAddress +735, 0 & set);
        do Memory.poke(memAddress +799, ~32767 & set);
        do Memory.poke(memAddress +831, ~32767 & set);
        do Memory.poke(memAddress +863, ~32767 & set);
        do Memory.poke(memAddress +895, ~32767 & set);
        do Memory.poke(memAddress +927, ~32767 & set);
        do Memory.poke(memAddress +959, ~32767 & set);
        do Memory.poke(memAddress +991, ~32767 & set);
        do Memory.poke(memAddress +1023, ~32767 & set);
        do Memory.poke(memAddress +1055, ~32767 & set);
        do Memory.poke(memAddress +1087, ~32767 & set);
        do Memory.poke(memAddress +1119, ~32767 & set);
        return;
    }

    method void drawXmas(bool set) {
        var int memAddress; 
        let memAddress = 16384 + (10 * 32) + (352 / 16);
        // column 0
        do Memory.poke(memAddress +384, 2 & set);
        do Memory.poke(memAddress +320, 0 & set);
        do Memory.poke(memAddress +352, 0 & set);
        do Memory.poke(memAddress +416, 6 & set);
        do Memory.poke(memAddress +448, 516 & set);
        do Memory.poke(memAddress +480, 396 & set);
        do Memory.poke(memAddress +512, -16280 & set);
        do Memory.poke(memAddress +544, -8136 & set);
        do Memory.poke(memAddress +576, -20456 & set);
        do Memory.poke(memAddress +608, -26600 & set);
        do Memory.poke(memAddress +640, 3124 & set);
        do Memory.poke(memAddress +672, 1058 & set);
        do Memory.poke(memAddress +704, 1059 & set);
        do Memory.poke(memAddress +736, 609 & set);
        do Memory.poke(memAddress +768, 577 & set);
        do Memory.poke(memAddress +800, 576 & set);
        do Memory.poke(memAddress +832, 576 & set);
        do Memory.poke(memAddress +864, 576 & set);
        do Memory.poke(memAddress +896, 512 & set);
        // column 1
        do Memory.poke(memAddress +513, 0 & set);
        do Memory.poke(memAddress +321, 0 & set);
        do Memory.poke(memAddress +353, 0 & set);
        do Memory.poke(memAddress +385, 0 & set);
        do Memory.poke(memAddress +417, 0 & set);
        do Memory.poke(memAddress +449, 0 & set);
        do Memory.poke(memAddress +481, 0 & set);
        do Memory.poke(memAddress +545, 0 & set);
        do Memory.poke(memAddress +577, 896 & set);
        do Memory.poke(memAddress +609, 737 & set);
        do Memory.poke(memAddress +641, 561 & set);
        do Memory.poke(memAddress +673, 537 & set);
        do Memory.poke(memAddress +705, 525 & set);
        do Memory.poke(memAddress +737, -32249 & set);
        do Memory.poke(memAddress +769, -15869 & set);
        do Memory.poke(memAddress +801, 16899 & set);
        do Memory.poke(memAddress +833, -7679 & set);
        do Memory.poke(memAddress +865, 12545 & set);
        do Memory.poke(memAddress +897, 4353 & set);
        do Memory.poke(memAddress +929, 2432 & set);
        do Memory.poke(memAddress +961, 2048 & set);
        // column 2
        do Memory.poke(memAddress +546, 224 & set);
        do Memory.poke(memAddress +322, 0 & set);
        do Memory.poke(memAddress +354, 0 & set);
        do Memory.poke(memAddress +386, 0 & set);
        do Memory.poke(memAddress +418, 0 & set);
        do Memory.poke(memAddress +450, 0 & set);
        do Memory.poke(memAddress +482, 0 & set);
        do Memory.poke(memAddress +514, 0 & set);
        do Memory.poke(memAddress +578, 152 & set);
        do Memory.poke(memAddress +610, 140 & set);
        do Memory.poke(memAddress +642, 134 & set);
        do Memory.poke(memAddress +674, -3966 & set);
        do Memory.poke(memAddress +706, 4225 & set);
        do Memory.poke(memAddress +738, 4225 & set);
        do Memory.poke(memAddress +770, 4224 & set);
        do Memory.poke(memAddress +802, 4224 & set);
        do Memory.poke(memAddress +834, 28927 & set);
        do Memory.poke(memAddress +866, -16256 & set);
        do Memory.poke(memAddress +898, 128 & set);
        do Memory.poke(memAddress +930, 128 & set);
        do Memory.poke(memAddress +962, 128 & set);
        do Memory.poke(memAddress +994, 192 & set);
        do Memory.poke(memAddress +1026, 64 & set);
        do Memory.poke(memAddress +1058, -16288 & set);
        do Memory.poke(memAddress +1090, 31776 & set);
        // column 3
        do Memory.poke(memAddress +675, 3 & set);
        do Memory.poke(memAddress +323, 0 & set);
        do Memory.poke(memAddress +355, 0 & set);
        do Memory.poke(memAddress +387, 0 & set);
        do Memory.poke(memAddress +419, 0 & set);
        do Memory.poke(memAddress +451, 0 & set);
        do Memory.poke(memAddress +483, 0 & set);
        do Memory.poke(memAddress +515, 0 & set);
        do Memory.poke(memAddress +547, 0 & set);
        do Memory.poke(memAddress +579, 0 & set);
        do Memory.poke(memAddress +611, 0 & set);
        do Memory.poke(memAddress +643, 0 & set);
        do Memory.poke(memAddress +707, 2 & set);
        do Memory.poke(memAddress +739, 4 & set);
        do Memory.poke(memAddress +771, 12 & set);
        do Memory.poke(memAddress +803, 8 & set);
        do Memory.poke(memAddress +867, 1 & set);
        do Memory.poke(memAddress +835, 0 & set);
        do Memory.poke(memAddress +899, 259 & set);
        do Memory.poke(memAddress +931, 898 & set);
        do Memory.poke(memAddress +963, 964 & set);
        do Memory.poke(memAddress +995, 964 & set);
        do Memory.poke(memAddress +1027, 486 & set);
        do Memory.poke(memAddress +1059, 481 & set);
        do Memory.poke(memAddress +1091, 224 & set);
        do Memory.poke(memAddress +1123, 64 & set);
        do Memory.poke(memAddress +1187, 28 & set);
        do Memory.poke(memAddress +1155, 0 & set);
        do Memory.poke(memAddress +1219, 28 & set);
        // column -1
        do Memory.poke(memAddress +767, ~32767 & set);
        do Memory.poke(memAddress +383, 0 & set);
        do Memory.poke(memAddress +415, 0 & set);
        do Memory.poke(memAddress +447, 0 & set);
        do Memory.poke(memAddress +479, 0 & set);
        do Memory.poke(memAddress +511, 0 & set);
        do Memory.poke(memAddress +543, 0 & set);
        do Memory.poke(memAddress +575, 0 & set);
        do Memory.poke(memAddress +607, 0 & set);
        do Memory.poke(memAddress +639, 0 & set);
        do Memory.poke(memAddress +671, 0 & set);
        do Memory.poke(memAddress +703, 0 & set);
        do Memory.poke(memAddress +735, 0 & set);
        do Memory.poke(memAddress +799, ~32767 & set);
        do Memory.poke(memAddress +831, ~32767 & set);
        return;
    }

    method void drawEND(){
        var int memAddress; 
        let memAddress = 16384;
        // column 0
        do Memory.poke(memAddress +320, -7168);
        do Memory.poke(memAddress +192, 0);
        do Memory.poke(memAddress +224, 0);
        do Memory.poke(memAddress +256, 0);
        do Memory.poke(memAddress +288, 0);
        do Memory.poke(memAddress +352, 17920);
        do Memory.poke(memAddress +384, 17155);
        do Memory.poke(memAddress +416, 24836);
        do Memory.poke(memAddress +448, 8376);
        do Memory.poke(memAddress +480, 24672);
        do Memory.poke(memAddress +512, 16448);
        do Memory.poke(memAddress +544, -32704);
        do Memory.poke(memAddress +576, -32704);
        do Memory.poke(memAddress +608, 64);
        do Memory.poke(memAddress +704, 12416);
        do Memory.poke(memAddress +640, 0);
        do Memory.poke(memAddress +672, 0);
        do Memory.poke(memAddress +736, 8320);
        do Memory.poke(memAddress +768, 24704);
        do Memory.poke(memAddress +800, 24704);
        do Memory.poke(memAddress +832, -7808);
        do Memory.poke(memAddress +864, -20224);
        do Memory.poke(memAddress +896, 4352);
        do Memory.poke(memAddress +928, 6912);
        do Memory.poke(memAddress +960, 3584);
        // column 1
        do Memory.poke(memAddress +321, 16527);
        do Memory.poke(memAddress +193, 0);
        do Memory.poke(memAddress +225, 0);
        do Memory.poke(memAddress +257, 0);
        do Memory.poke(memAddress +289, 0);
        do Memory.poke(memAddress +353, 16536);
        do Memory.poke(memAddress +385, 16560);
        do Memory.poke(memAddress +417, 16544);
        do Memory.poke(memAddress +449, 16544);
        do Memory.poke(memAddress +481, 16800);
        do Memory.poke(memAddress +513, 25392);
        do Memory.poke(memAddress +545, 15896);
        do Memory.poke(memAddress +577, 15);
        do Memory.poke(memAddress +641, 3072);
        do Memory.poke(memAddress +609, 0);
        do Memory.poke(memAddress +673, 1984);
        do Memory.poke(memAddress +705, 520);
        do Memory.poke(memAddress +737, 520);
        do Memory.poke(memAddress +769, -32248);
        do Memory.poke(memAddress +801, -32248);
        do Memory.poke(memAddress +833, -32248);
        do Memory.poke(memAddress +865, -32247);
        do Memory.poke(memAddress +897, -19957);
        do Memory.poke(memAddress +929, -24698);
        // column 2
        do Memory.poke(memAddress +642, 64);
        do Memory.poke(memAddress +322, 0);
        do Memory.poke(memAddress +354, 0);
        do Memory.poke(memAddress +386, 0);
        do Memory.poke(memAddress +418, 0);
        do Memory.poke(memAddress +450, 0);
        do Memory.poke(memAddress +482, 0);
        do Memory.poke(memAddress +514, 0);
        do Memory.poke(memAddress +546, 0);
        do Memory.poke(memAddress +578, 0);
        do Memory.poke(memAddress +610, 0);
        do Memory.poke(memAddress +674, 67);
        do Memory.poke(memAddress +706, 67);
        do Memory.poke(memAddress +738, 71);
        do Memory.poke(memAddress +770, 69);
        do Memory.poke(memAddress +802, 76);
        do Memory.poke(memAddress +834, 88);
        do Memory.poke(memAddress +866, 80);
        do Memory.poke(memAddress +898, 112);
        do Memory.poke(memAddress +930, 0);
        // column -1
        do Memory.poke(memAddress +351, ~32767);
        do Memory.poke(memAddress +191, 0);
        do Memory.poke(memAddress +223, 0);
        do Memory.poke(memAddress +255, 0);
        do Memory.poke(memAddress +287, 0);
        do Memory.poke(memAddress +319, 0);
        return;
    }
}