class Hitbox {

    field int xStat, yStat, vyStat;
    field bool stableStat;
    field int buffer;

    constructor Hitbox new() {
        let xStat = 0;
        let yStat = 0;
        let vyStat = 0;
        let stableStat = false;
        let buffer = 1;
        return this;
    }

    method int getX() { return xStat; }
    method int getY() { return yStat; }
    method int getVY() { return vyStat; }
    method bool getStable() { return stableStat; }

    // hitbox.detectMain(level, x, y, vy, isStable, size);
    method void detectMain(int level, int x, int y, int vy, bool s, int size) {
        let xStat = x;
        let yStat = y;
        let vyStat = vy;
        let stableStat = s;
        
        if(level = 0) {
            do Output.println();
            do detectLevel0(x, y, vy, s, size);
        }
        if(level = 1) {
            do detectLevel1(x, y, vy, s, size);
        }
        return;
    }

    method void detectLevel0(int x, int y, int vy, bool s, int size) {
        if(x < 1) {
            let xStat = 1;
        }
        if((x + size) > 510) {
            let xStat = 510 - size;
        }
        if(y < 1) {
            let yStat = 1;
            let vyStat = 0;
        }
        if((y + size) > 254) {
            let yStat = 254 - size;
            let vyStat = 0;
            let stableStat = true;
        }
        return;
    }
    
    method void detectLevel1(int x, int y, int vy, bool s, int size) {
        do detectSquare(300-buffer, 510+buffer, 184-buffer, 254+buffer, x, y, size);
        do detectSquare(200-buffer, 300+buffer, 124-buffer, 160+buffer, x, y, size);

        if(x < 1) {
            let xStat = 1;
        }
        if((x + size) > 510) {
            let xStat = 510 - size;
        }
        if(y < 1) {
            let yStat = 1;
            let vyStat = 0;
        }
        if((y + size) > 254) {
            let yStat = 254 - size;
            let vyStat = 0;
            let stableStat = true;
        }

        return;
    }

    method void detectSquare(int xL, int xR, int yU, int yD, int x, int y, int size) {
        if(((x + size) > xL) & (x < xR)) {
            if((y < yD) & ((y + size) > yD)) {
                // do Output.printString("YD EDGE!");
                // do Output.println();
                let yStat = yD;
                let vyStat = 0;
            }
            if(((y + size) > yU) & (y < yU)) {
                //do Output.printString("YU EDGE!");
                // do Output.println();
                let yStat = yU - size;
                let vyStat = 0;
                let stableStat = true;
            }
        }
        if(((y + size) > yU) & (y < yD)) {
            if((x < xR) & ((x + size) > xR)) {
                // do Output.printString("XR EDGE!");
                // do Output.println();
                let xStat = xR;
            }
            if(((x + size) > xL) & (x < xL)) {
                // do Output.printString("XL EDGE!");
                // do Output.println();
                let xStat = xL - size;
            }
        }
        return;
    }
}